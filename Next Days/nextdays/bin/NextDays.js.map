{
"version":3,
"file":"NextDays.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/HaxeToolkit/haxe/lib/perf,js/1,1,8/src/Perf.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringBuf.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","C:/HaxeToolkit/haxe/std/UInt.hx","C:/HaxeToolkit/haxe/std/Xml.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/Main.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/GameManager.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/game/GameObject.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/game/StateGraphic.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/sprites/PoolObject.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/sprites/Mobile.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/sprites/Character.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/sprites/entities/Player.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/Generator.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/PoolManager.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/game/sprites/planes/GamePlane.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/CheatPanel.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/loader/GameLoader.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/LoaderManager.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/UIManager.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/ui/UIComponent.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/ui/Screen.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/hud/Hud.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/ui/Popin.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/popin/Confirm.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/screens/GraphicLoader.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/screens/SpriteAmplified.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/ui/screens/TitleCard.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/Config.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/Debug.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/game/CollisionManager.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/game/GameStage.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/sounds/SoundManager.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/system/DeviceCapabilities.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/ui/UIPosition.hx","C:/HaxeToolkit/haxe/std/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/haxe/xml/Parser.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/_std/Math.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/events/EventType.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/events/LoadEventType.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/events/MouseEventType.hx","E:/NEXT_DAYS/NextDaysTim/Next Days/nextdays/src/com/ragestudio/utils/events/TouchEventType.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","import js.html.Performance;\nimport js.html.DivElement;\nimport js.Browser;\n\n@:expose class Perf {\n\n\tpublic static var MEASUREMENT_INTERVAL:Int = 1000;\n\n\tpublic static var FONT_FAMILY:String = \"Helvetica,Arial\";\n\n\tpublic static var FPS_BG_CLR:String = \"#00FF00\";\n\tpublic static var FPS_WARN_BG_CLR:String = \"#FF8000\";\n\tpublic static var FPS_PROB_BG_CLR:String = \"#FF0000\";\n\n\tpublic static var MS_BG_CLR:String = \"#FFFF00\";\n\tpublic static var MEM_BG_CLR:String = \"#086A87\";\n\tpublic static var INFO_BG_CLR:String = \"#00FFFF\";\n\tpublic static var FPS_TXT_CLR:String = \"#000000\";\n\tpublic static var MS_TXT_CLR:String = \"#000000\";\n\tpublic static var MEM_TXT_CLR:String = \"#FFFFFF\";\n\tpublic static var INFO_TXT_CLR:String = \"#000000\";\n\n\tpublic static var TOP_LEFT:String = \"TL\";\n\tpublic static var TOP_RIGHT:String = \"TR\";\n\tpublic static var BOTTOM_LEFT:String = \"BL\";\n\tpublic static var BOTTOM_RIGHT:String = \"BR\";\n\n\tstatic var DELAY_TIME:Int = 4000;\n\n\tpublic var fps:DivElement;\n\tpublic var ms:DivElement;\n\tpublic var memory:DivElement;\n\tpublic var info:DivElement;\n\n\tpublic var lowFps:Float;\n\tpublic var avgFps:Float;\n\tpublic var currentFps:Float;\n\tpublic var currentMs:Float;\n\tpublic var currentMem:String;\n\n\tvar _time:Float;\n\tvar _startTime:Float;\n\tvar _prevTime:Float;\n\tvar _ticks:Int;\n\tvar _fpsMin:Float;\n\tvar _fpsMax:Float;\n\tvar _memCheck:Bool;\n\tvar _pos:String;\n\tvar _offset:Float;\n\tvar _measureCount:Int;\n\tvar _totalFps:Float;\n\n\tvar _perfObj:Performance;\n\tvar _memoryObj:Memory;\n\tvar _raf:Int;\n\n\tvar RAF:Dynamic;\n\tvar CAF:Dynamic;\n\n\tpublic function new(?pos = \"TR\", ?offset:Float = 0) {\n\t\t_perfObj = Browser.window.performance;\n\t\tif (Reflect.field(_perfObj, \"memory\") != null) _memoryObj = Reflect.field(_perfObj, \"memory\");\n\t\t_memCheck = (_perfObj != null && _memoryObj != null && _memoryObj.totalJSHeapSize > 0);\n\n\t\t_pos = pos;\n\t\t_offset = offset;\n\n\t\t_init();\n\t\t_createFpsDom();\n\t\t_createMsDom();\n\t\tif (_memCheck) _createMemoryDom();\n\n\t\tif (Browser.window.requestAnimationFrame != null) RAF = Browser.window.requestAnimationFrame;\n\t\telse if (untyped __js__(\"window\").mozRequestAnimationFrame != null) RAF = untyped __js__(\"window\").mozRequestAnimationFrame;\n\t\telse if (untyped __js__(\"window\").webkitRequestAnimationFrame != null) RAF = untyped __js__(\"window\").webkitRequestAnimationFrame;\n\t\telse if (untyped __js__(\"window\").msRequestAnimationFrame != null) RAF = untyped __js__(\"window\").msRequestAnimationFrame;\n\n\t\tif (Browser.window.cancelAnimationFrame != null) CAF = Browser.window.cancelAnimationFrame;\n\t\telse if (untyped __js__(\"window\").mozCancelAnimationFrame != null) CAF = untyped __js__(\"window\").mozCancelAnimationFrame;\n\t\telse if (untyped __js__(\"window\").webkitCancelAnimationFrame != null) CAF = untyped __js__(\"window\").webkitCancelAnimationFrame;\n\t\telse if (untyped __js__(\"window\").msCancelAnimationFrame != null) CAF = untyped __js__(\"window\").msCancelAnimationFrame;\n\n\t\tif (RAF != null) _raf = Reflect.callMethod(Browser.window, RAF, [_tick]);\n\t}\n\n\tinline function _init() {\n\t\tcurrentFps = 60;\n\t\tcurrentMs = 0;\n\t\tcurrentMem = \"0\";\n\n\t\tlowFps = 60;\n\t\tavgFps = 60;\n\n\t\t_measureCount = 0;\n\t\t_totalFps = 0;\n\t\t_time = 0;\n\t\t_ticks = 0;\n\t\t_fpsMin = 60;\n\t\t_fpsMax = 60;\n\t\t_startTime = _now();\n\t\t_prevTime = -MEASUREMENT_INTERVAL;\n\t}\n\n\tinline function _now():Float {\n\t\treturn (_perfObj != null && _perfObj.now != null) ? _perfObj.now() : Date.now().getTime();\n\t}\n\n\tfunction _tick(val:Float) {\n\t\tvar time = _now();\n\t\t_ticks++;\n\n\t\tif (_raf != null && time > _prevTime + MEASUREMENT_INTERVAL) {\n\t\t\tcurrentMs = Math.round(time - _startTime);\n\t\t\tms.innerHTML = \"MS: \" + currentMs;\n\n\t\t\tcurrentFps = Math.round((_ticks * 1000) / (time - _prevTime));\n\t\t\tif (currentFps > 0 && val > DELAY_TIME) {\n\t\t\t\t_measureCount++;\n\t\t\t\t_totalFps += currentFps;\n\t\t\t\tlowFps = _fpsMin = Math.min(_fpsMin, currentFps);\n\t\t\t\t_fpsMax = Math.max(_fpsMax, currentFps);\n\t\t\t\tavgFps = Math.round(_totalFps / _measureCount);\n\t\t\t}\n\n\t\t\tfps.innerHTML =  \"FPS: \" + currentFps + \" (\" + _fpsMin + \"-\" + _fpsMax + \")\";\n\n\t\t\tif (currentFps >= 30) fps.style.backgroundColor = FPS_BG_CLR;\n\t\t\telse if (currentFps >= 15) fps.style.backgroundColor = FPS_WARN_BG_CLR;\n\t\t\telse fps.style.backgroundColor = FPS_PROB_BG_CLR;\n\n\t\t\t_prevTime = time;\n\t\t\t_ticks = 0;\n\n\t\t\tif (_memCheck) {\n\t\t\t\tcurrentMem = _getFormattedSize(_memoryObj.usedJSHeapSize, 2);\n\t\t\t\tmemory.innerHTML = \"MEM: \" + currentMem;\n\t\t\t}\n\t\t}\n\t\t_startTime =  time;\n\n\t\tif (_raf != null) _raf = Reflect.callMethod(Browser.window, RAF, [_tick]);\n\t}\n\n\tfunction _createDiv(id:String, ?top:Float = 0):DivElement {\n\t\tvar div:DivElement = Browser.document.createDivElement();\n\t\tdiv.id = id;\n\t\tdiv.className = id;\n\t\tdiv.style.position = \"absolute\";\n\n\t\tswitch (_pos) {\n\t\t\tcase \"TL\":\n\t\t\t\tdiv.style.left = _offset + \"px\";\n\t\t\t\tdiv.style.top = top + \"px\";\n\t\t\tcase \"TR\":\n\t\t\t\tdiv.style.right = _offset + \"px\";\n\t\t\t\tdiv.style.top = top + \"px\";\n\t\t\tcase \"BL\":\n\t\t\t\tdiv.style.left = _offset + \"px\";\n\t\t\t\tdiv.style.bottom = ((_memCheck) ? 48 : 32) - top + \"px\";\n\t\t\tcase \"BR\":\n\t\t\t\tdiv.style.right = _offset + \"px\";\n\t\t\t\tdiv.style.bottom = ((_memCheck) ? 48 : 32) - top + \"px\";\n\t\t}\n\n\t\tdiv.style.width = \"80px\";\n\t\tdiv.style.height = \"12px\";\n\t\tdiv.style.lineHeight = \"12px\";\n\t\tdiv.style.padding = \"2px\";\n\t\tdiv.style.fontFamily = FONT_FAMILY;\n\t\tdiv.style.fontSize = \"9px\";\n\t\tdiv.style.fontWeight = \"bold\";\n\t\tdiv.style.textAlign = \"center\";\n\t\tBrowser.document.body.appendChild(div);\n\t\treturn div;\n\t}\n\n\tfunction _createFpsDom() {\n\t\tfps = _createDiv(\"fps\");\n\t\tfps.style.backgroundColor = FPS_BG_CLR;\n\t\tfps.style.zIndex = \"995\";\n\t\tfps.style.color = FPS_TXT_CLR;\n\t\tfps.innerHTML = \"FPS: 0\";\n\t}\n\n\tfunction _createMsDom() {\n\t\tms = _createDiv(\"ms\", 16);\n\t\tms.style.backgroundColor = MS_BG_CLR;\n\t\tms.style.zIndex = \"996\";\n\t\tms.style.color = MS_TXT_CLR;\n\t\tms.innerHTML = \"MS: 0\";\n\t}\n\n\tfunction _createMemoryDom() {\n\t\tmemory = _createDiv(\"memory\", 32);\n\t\tmemory.style.backgroundColor = MEM_BG_CLR;\n\t\tmemory.style.color = MEM_TXT_CLR;\n\t\tmemory.style.zIndex = \"997\";\n\t\tmemory.innerHTML = \"MEM: 0\";\n\t}\n\n\tfunction _getFormattedSize(bytes:Float, ?frac:Int = 0):String {\n\t\tvar sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n\t\tif (bytes == 0) return \"0\";\n\t\tvar precision = Math.pow(10, frac);\n\t\tvar i = Math.floor(Math.log(bytes) / Math.log(1024));\n\t\treturn Math.round(bytes * precision / Math.pow(1024, i)) / precision + \" \" + sizes[i];\n\t}\n\n\tpublic function addInfo(val:String) {\n\t\tinfo = _createDiv(\"info\", (_memCheck) ? 48 : 32);\n\t\tinfo.style.backgroundColor = INFO_BG_CLR;\n\t\tinfo.style.color = INFO_TXT_CLR;\n\t\tinfo.style.zIndex = \"998\";\n\t\tinfo.innerHTML = val;\n\t}\n\n\tpublic function clearInfo() {\n\t\tif (info != null) {\n\t\t\tBrowser.document.body.removeChild(info);\n\t\t\tinfo = null;\n\t\t}\n\t}\n\n\tpublic function destroy() {\n\t\t_cancelRAF();\n\t\t_perfObj = null;\n\t\t_memoryObj = null;\n\t\tif (fps != null) {\n\t\t\tBrowser.document.body.removeChild(fps);\n\t\t\tfps = null;\n\t\t}\n\t\tif (ms != null) {\n\t\t\tBrowser.document.body.removeChild(ms);\n\t\t\tms = null;\n\t\t}\n\t\tif (memory != null) {\n\t\t\tBrowser.document.body.removeChild(memory);\n\t\t\tmemory = null;\n\t\t}\n\t\tclearInfo();\n\t\t_init();\n\t}\n\n\tinline function _cancelRAF() {\n\t\tReflect.callMethod(Browser.window, CAF, [_raf]);\n\t\t_raf = null;\n\t}\n}\n\ntypedef Memory = {\n\tvar usedJSHeapSize:Float;\n\tvar totalJSHeapSize:Float;\n\tvar jsHeapSizeLimit:Float;\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if python\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than String.charCodeAt() on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n#if ((flash || flash9doc || cs) && !doc_gen)\n/**\n\tThe unsigned Int type is only defined for Flash and C#. It's currently\n\thandled the same as a normal Int.\n**/\n@:coreType\n@:notNull\n@:runtimeValue\n@:analyzer(no_const_propagation)\nabstract UInt to Int from Int\n{\n\t@:commutative @:op(A+B) private static function addI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A+B) private static function addF(lhs:UInt, rhs:Float):Float;\n\t@:op(A+B) private static function add(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A*B) private static function mulI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A*B) private static function mulF(lhs:UInt, rhs:Float):Float;\n\t@:op(A*B) private static function mul(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A%B) private static function modI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A%B) private static function modF(lhs:UInt, rhs:Float):Float;\n\t@:op(A%B) private static function mod(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A-B) private static function subI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A-B) private static function subF(lhs:UInt, rhs:Float):Float;\n\t@:op(A-B) private static function sub(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A/B) private static function divI(lhs:UInt, rhs:Int):Float;\n\t@:op(A/B) private static function divF(lhs:UInt, rhs:Float):Float;\n\t@:op(A/B) private static function div(lhs:UInt, rhs:UInt):Float;\n\n\t@:commutative @:op(A|B) private static function orI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A|B) private static function or(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A^B) private static function xorI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A^B) private static function xor(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A&B) private static function andI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A&B) private static function and(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A<<B) private static function shl(lhs:UInt, rhs:Int):UInt;\n\t@:op(A>>B) private static function shr(lhs:UInt, rhs:Int):UInt;\n\t@:op(A>>>B) private static function ushr(lhs:UInt, rhs:Int):UInt;\n\n\t@:op(A>B) private static function gt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gte(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<B) private static function lt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<=B) private static function lte(lhs:UInt, rhs:UInt):Bool;\n\n\t@:op(A>B) private static function gtf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>B) private static function gtf(lhs:Float, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gtef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>=B) private static function gtef(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<B) private static function ltf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<B) private static function ltf(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<=B) private static function ltef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<=B) private static function ltef(lhs:Float, rhs:UInt):Bool;\n\n\t@:op(~A) private static function bneg(t:UInt):UInt;\n\n\t@:commutative @:op(A == B) private static function equalsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A == B) private static function equalsFloat<T:Float>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsFloat<T:Float>(a:UInt, b:T):Bool;\n\n\t@:op(++A) private function prefixIncrement():UInt;\n\t@:op(A++) private function postfixIncrement():UInt;\n\t@:op(--A) private function prefixDecrement():UInt;\n\t@:op(A--) private function postfixDecrement():UInt;\n}\n#else\n/**\n\tThe unsigned Int type is only defined for Flash and C#.\n\tSimulate it for other platforms.\n**/\nabstract UInt(Int) from Int to Int {\n\n\t@:op(A + B) private static inline function add(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() + b.toInt();\n\t}\n\n\t@:op(A / B) private static inline function div(a:UInt, b:UInt):Float {\n\t\treturn a.toFloat() / b.toFloat();\n\t}\n\n\t@:op(A * B) private static inline function mul(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() * b.toInt();\n\t}\n\n\t@:op(A - B) private static inline function sub(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() - b.toInt();\n\t}\n\n\t@:op(A > B) private static #if !js inline #end function gt(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() > b.toInt();\n\t}\n\n\t@:op(A >= B) private static #if !js inline #end function gte(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() >= b.toInt();\n\t}\n\n\t@:op(A < B) private static inline function lt(a:UInt, b:UInt):Bool {\n\t\treturn gt(b, a);\n\t}\n\n\t@:op(A <= B) private static inline function lte(a:UInt, b:UInt):Bool {\n\t\treturn gte(b, a);\n\t}\n\n\t@:op(A & B) private static inline function and(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() & b.toInt();\n\t}\n\n\t@:op(A | B) private static inline function or(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() | b.toInt();\n\t}\n\n\t@:op(A ^ B) private static inline function xor(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() ^ b.toInt();\n\t}\n\n\t@:op(A << B) private static inline function shl(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() << b;\n\t}\n\n\t@:op(A >> B) private static inline function shr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >> b;\n\t}\n\n\t@:op(A >>> B) private static inline function ushr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >>> b;\n\t}\n\n\t@:op(A % B) private static inline function mod(a:UInt, b:UInt):UInt {\n\t\treturn Std.int( a.toFloat() % b.toFloat() );\n\t}\n\n\t@:commutative @:op(A + B) private static inline function addWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() + b;\n\t}\n\n\t@:commutative @:op(A * B) private static inline function mulWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() * b;\n\t}\n\n\t@:op(A / B) private static inline function divFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() / b;\n\t}\n\n\t@:op(A / B) private static inline function floatDiv(a:Float, b:UInt):Float {\n\t\treturn a / b.toFloat();\n\t}\n\n\t@:op(A - B) private static inline function subFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() - b;\n\t}\n\n\t@:op(A - B) private static inline function floatSub(a:Float, b:UInt):Float {\n\t\treturn a - b.toFloat();\n\t}\n\n\t@:op(A > B) private static inline function gtFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() > b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() == b;\n\t}\n\n\t@:commutative @:op(A != B) private static inline function notEqualsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() != b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsFloat<T:Float>(a:UInt, b:T):Bool {\n        return a.toFloat() == b;\n    }\n\n    @:commutative @:op(A != B) private static inline function notEqualsFloat<T:Float>(a:UInt, b:T):Bool {\n        return a.toFloat() != b;\n    }\n\n\t@:op(A >= B) private static inline function gteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() >= b;\n\t}\n\n\n\t@:op(A > B) private static inline function floatGt(a:Float, b:UInt):Bool {\n\t\treturn a > b.toFloat();\n\t}\n\n\t@:op(A >= B) private static inline function floatGte(a:Float, b:UInt):Bool {\n\t\treturn a >= b.toFloat();\n\t}\n\n\t@:op(A < B) private static inline function ltFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() < b;\n\t}\n\n\t@:op(A <= B) private static inline function lteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() <= b;\n\t}\n\n\t@:op(A < B) private static inline function floatLt(a:Float, b:UInt):Bool {\n\t\treturn a < b.toFloat();\n\t}\n\n\t@:op(A <= B) private static inline function floatLte(a:Float, b:UInt):Bool {\n\t\treturn a <= b.toFloat();\n\t}\n\n\t@:op(A % B) private static inline function modFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() % b;\n\t}\n\n\t@:op(A % B) private static inline function floatMod(a:Float, b:UInt):Float {\n\t\treturn a % b.toFloat();\n\t}\n\n\t@:op(~A) private inline function negBits():UInt {\n\t\treturn ~this;\n\t}\n\n\t@:op(++A) private inline function prefixIncrement():UInt {\n\t\treturn ++this;\n\t}\n\n\t@:op(A++) private inline function postfixIncrement():UInt {\n\t\treturn this++;\n\t}\n\n\t@:op(--A) private inline function prefixDecrement():UInt {\n\t\treturn --this;\n\t}\n\n\t@:op(A--) private inline function postfixDecrement():UInt {\n\t\treturn this--;\n\t}\n\n\t// TODO: radix is just defined to deal with doc_gen issues\n\tprivate inline function toString(?radix:Int):String {\n\t\treturn Std.string(toFloat());\n\t}\n\n\tprivate inline function toInt():Int {\n\t\treturn this;\n\t}\n\n\t@:to private #if (!js || analyzer) inline #end function toFloat():Float {\n\t\tvar int = toInt();\n\t\tif (int < 0) {\n\t\t\treturn 4294967296.0 + int;\n\t\t}\n\t\telse {\n\t\t\t// + 0.0 here to make sure we promote to Float on some platforms\n\t\t\t// In particular, PHP was having issues when comparing to Int in the == op.\n\t\t\treturn int + 0.0;\n\t\t}\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2015 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n@:enum abstract XmlType(Int) {\n\tvar Element = 0;\n\tvar PCData = 1;\n\tvar CData = 2;\n\tvar Comment = 3;\n\tvar DocType = 4;\n\tvar ProcessingInstruction = 5;\n\tvar Document = 6;\n}\n\nclass Xml {\n\n\tstatic public var Element(default,null) = XmlType.Element;\n\tstatic public var PCData(default,null) = XmlType.PCData;\n\tstatic public var CData(default,null) = XmlType.CData;\n\tstatic public var Comment(default,null) = XmlType.Comment;\n\tstatic public var DocType(default,null) = XmlType.DocType;\n\tstatic public var ProcessingInstruction(default,null) = XmlType.ProcessingInstruction;\n\tstatic public var Document(default,null) = XmlType.Document;\n\n\tstatic public function parse( str : String ) : Xml {\n\t\treturn haxe.xml.Parser.parse(str);\n\t}\n\n\t/**\n\t\tReturns the type of the Xml Node. This should be used before\n\t\taccessing other functions since some might raise an exception\n\t\tif the node type is not correct.\n\t**/\n\tpublic var nodeType(default, null) : XmlType;\n\n\t/**\n\t\tReturns the node name of an Element.\n\t**/\n\t@:isVar public var nodeName(get, set) : String;\n\n\t/**\n\t\tReturns the node value. Only works if the Xml node is not an Element or a Document.\n\t**/\n\t@:isVar public var nodeValue(get, set) : String;\n\n\t/**\n\t\tReturns the parent object in the Xml hierarchy.\n\t\tThe parent can be [null], an Element or a Document.\n\t**/\n\tpublic var parent(default, null) : Xml;\n\n\tvar children:Array<Xml>;\n\tvar attributeMap:Map<String, String>;\n\n\tinline function get_nodeName() {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn nodeName;\n\t}\n\n\tinline function set_nodeName(v) {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn this.nodeName = v;\n\t}\n\n\tinline function get_nodeValue() {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn nodeValue;\n\t}\n\n\tinline function set_nodeValue(v) {\n\t\tif (nodeType == Document || nodeType == Element) {\n\t\t\tthrow 'Bad node type, unexpected $nodeType';\n\t\t}\n\t\treturn this.nodeValue = v;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createElement( name : String ) : Xml {\n\t\tvar xml = new Xml(Element);\n\t\txml.nodeName = name;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createPCData( data : String ) : Xml {\n\t\tvar xml = new Xml(PCData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createCData( data : String ) : Xml {\n\t\tvar xml = new Xml(CData);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createComment( data : String ) : Xml {\n\t\tvar xml = new Xml(Comment);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocType( data : String ) : Xml {\n\t\tvar xml = new Xml(DocType);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createProcessingInstruction( data : String ) : Xml {\n\t\tvar xml = new Xml(ProcessingInstruction);\n\t\txml.nodeValue = data;\n\t\treturn xml;\n\t}\n\n\t/**\n\t\tCreates a node of the given type.\n\t**/\n\tstatic public function createDocument() : Xml {\n\t\treturn new Xml(Document);\n\t}\n\n\t/**\n\t\tGet the given attribute of an Element node. Returns [null] if not found.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function get( att : String ) : String {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap[att];\n\t}\n\n\t/**\n\t\tSet the given attribute value for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function set( att : String, value : String ) : Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.set(att, value);\n\t}\n\n\t/**\n\t\tRemoves an attribute for an Element node.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function remove( att : String ) : Void {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\tattributeMap.remove(att);\n\t}\n\n\t/**\n\t\tTells if the Element node has a given attribute.\n\t\tAttributes are case-sensitive.\n\t**/\n\tpublic function exists( att : String ) : Bool {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.exists(att);\n\t}\n\n\t/**\n\t\tReturns an [Iterator] on all the attribute names.\n\t**/\n\tpublic function attributes() : Iterator<String> {\n\t\tif (nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element but found $nodeType';\n\t\t}\n\t\treturn attributeMap.keys();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic inline function iterator() : Iterator<Xml> {\n\t\tensureElementType();\n\t\treturn children.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elements() : Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [for (child in children) if (child.nodeType == Element) child];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns an iterator of all child nodes which are Elements with the given nodeName.\n\t\tOnly works if the current node is an Element or a Document.\n\t**/\n\tpublic function elementsNamed( name : String ) : Iterator<Xml> {\n\t\tensureElementType();\n\t\tvar ret = [for (child in children) if (child.nodeType == Element && child.nodeName == name) child];\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tReturns the first child node.\n\t**/\n\tpublic inline function firstChild() : Xml {\n\t\tensureElementType();\n\t\treturn children[0];\n\t}\n\n\t/**\n\t\tReturns the first child node which is an Element.\n\t**/\n\tpublic function firstElement() : Xml {\n\t\tensureElementType();\n\t\tfor (child in children) {\n\t\t\tif (child.nodeType == Element) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tAdds a child node to the Document or Element.\n\t\tA child node can only be inside one given parent node, which is indicated by the [parent] property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the last position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function addChild( x : Xml ) : Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.removeChild(x);\n\t\t}\n\t\tchildren.push(x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tRemoves a child from the Document or Element.\n\t\tReturns true if the child was successfuly removed.\n\t**/\n\tpublic function removeChild( x : Xml ) : Bool {\n\t\tensureElementType();\n\t\tif (children.remove(x)) {\n\t\t\tx.parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tInserts a child at the given position among the other childs.\n\t\tA child node can only be inside one given parent node, which is indicated by the [parent] property.\n\t\tIf the child is already inside this Document or Element, it will be moved to the new position among the Document or Element's children.\n\t\tIf the child node was previously inside a different node, it will be moved to this Document or Element.\n\t**/\n\tpublic function insertChild( x : Xml, pos : Int ) : Void {\n\t\tensureElementType();\n\t\tif (x.parent != null) {\n\t\t\tx.parent.children.remove(x);\n\t\t}\n\t\tchildren.insert(pos, x);\n\t\tx.parent = this;\n\t}\n\n\t/**\n\t\tReturns a String representation of the Xml node.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn haxe.xml.Printer.print(this);\n\t}\n\n\tfunction new(nodeType:XmlType) {\n\t\tthis.nodeType = nodeType;\n\t\tchildren = [];\n\t\tattributeMap = new Map();\n\t}\n\n\tinline function ensureElementType() {\n\t\tif (nodeType != Document && nodeType != Element) {\n\t\t\tthrow 'Bad node type, expected Element or Document but found $nodeType';\n\t\t}\n\t}\n}\n","package com.ragestudio;\n\nimport com.ragestudio.ui.screens.GraphicLoader;\nimport com.ragestudio.ui.LoaderManager;\nimport com.ragestudio.ui.screens.SpriteAmplified;\nimport com.ragestudio.ui.screens.TitleCard;\nimport com.ragestudio.ui.UIManager;\nimport com.ragestudio.utils.Config;\nimport com.ragestudio.utils.Debug;\nimport com.ragestudio.utils.events.EventType;\nimport com.ragestudio.utils.events.LoadEventType;\nimport com.ragestudio.utils.game.GameStage;\nimport com.ragestudio.utils.game.GameStageScale;\nimport com.ragestudio.utils.game.StateGraphic;\nimport com.ragestudio.utils.loader.GameLoader;\nimport com.ragestudio.utils.sounds.SoundManager;\nimport com.ragestudio.utils.system.DeviceCapabilities;\nimport eventemitter3.EventEmitter;\nimport haxe.Timer;\nimport js.Browser;\nimport pixi.core.display.Container;\nimport pixi.core.renderers.Detector;\nimport pixi.core.renderers.webgl.WebGLRenderer;\nimport pixi.interaction.EventTarget;\nimport pixi.loaders.Loader;\n/**\n * Classe d'initialisation et lancement du jeu\n * @author Mathieu ANTHOINE\n */\n\nclass Main extends EventEmitter\n{\n\t\n\t/**\n\t * chemin vers le fichier de configuration\n\t */\n\tprivate static var configPath:String = \"config.json\";\t\n\t\n\t/**\n\t * instance unique de la classe Main\n\t */\n\tprivate static var instance: Main;\n\t\n\t/**\n\t * renderer (WebGL ou Canvas)\n\t */\n\tpublic var renderer:WebGLRenderer;\n\t\n\t/**\n\t * Element racine de la displayList\n\t */\n\tpublic var stage:Container;\n\t\n\tpublic var frames (default, null):Int = 0;\n\tpublic static inline var FPS:Int = 16;//Math.floor(1000 / 60);\n\tprivate var blackBarLeft:SpriteAmplified = new SpriteAmplified(\"black_bg\");\n\tprivate var blackBarRight:SpriteAmplified = new SpriteAmplified(\"black_bg\");\n\tprivate var blackBarTop:SpriteAmplified = new SpriteAmplified(\"black_bg\");\n\tprivate var blackBarBot:SpriteAmplified = new SpriteAmplified(\"black_bg\");\n\n\t\n\t/**\n\t * initialisation générale\n\t */\n\tprivate static function main ():Void {\n\t\tMain.getInstance();\n\t}\n\n\t/**\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\n\t * @return instance unique\n\t */\n\tpublic static function getInstance (): Main {\n\t\tif (instance == null) instance = new Main();\n\t\treturn instance;\n\t}\n\t\n\t/**\n\t * création du jeu et lancement du chargement du fichier de configuration\n\t */\n\tprivate function new () {\n\t\t\n\t\tsuper();\n\t\t\n\t\tvar lOptions:RenderingOptions = {};\n\t\t//lOptions.antialias = true;\n\t\t//lOptions.autoResize = true;\n\t\tlOptions.backgroundColor = 0x9DC07A;\n\t\t//lOptions.resolution = 1;\n\t\t//lOptions.transparent = false;\n\t\t//lOptions.preserveDrawingBuffer (pour dataToURL)\n\t\t\n\t\t\n\t\tDeviceCapabilities.scaleViewport();\n\t\trenderer = Detector.autoDetectRenderer(DeviceCapabilities.width, DeviceCapabilities.height,lOptions);\n\t\trenderer.roundPixels = true;\n\t\t\n\t\tBrowser.document.body.appendChild(renderer.view);\n\t\t\n\t\tstage = new Container();\n\t\t\n\t\tvar lConfig:Loader = new Loader();\n\t\tconfigPath += \"?\" + Date.now().getTime();\n\t\tlConfig.add(configPath);\n\t\t\n\t\tlConfig.once(LoadEventType.COMPLETE, preloadAssets);\n\t\t\n\t\tlConfig.load();\n\n\t}\n\n\t\n\t/**\n\t * charge les assets graphiques du preloader principal\n\t */\n\tprivate function preloadAssets(pLoader:Loader):Void {\n\t\t\n\t\t// initialise les paramètres de configuration\n\t\tConfig.init(Reflect.field(pLoader.resources,configPath).data);\n\t\t// Active le mode debug\n\t\tif (Config.debug) Debug.getInstance().init();\n\t\t// défini l'alpha des Boxes de collision\n\t\tif (Config.debug && Config.data.boxAlpha != null) StateGraphic.boxAlpha = Config.data.boxAlpha;\n\t\t// défini l'alpha des anims\n\t\tif (Config.debug && Config.data.animAlpha != null) StateGraphic.animAlpha = Config.data.animAlpha;\n\t\t\n\t\t\n\t\tDeviceCapabilities.init();\n\t\t\n\t\t\n\t\t// défini le mode de redimensionnement du Jeu\n\t\tGameStage.getInstance().scaleMode = GameStageScale.SHOW_ALL;\n\t\t// initialise le GameStage et défini la taille de la safeZone\n\t\tGameStage.getInstance().init(render,2048, 1366);\n\t\t\n\t\t// affiche le bouton FullScreen quand c'est nécessaire\n\t\tDeviceCapabilities.displayFullScreenButton();\n\t\t\n\t\t// Ajoute le GameStage au stage\n\t\tstage.addChild(GameStage.getInstance());\n\t\t\n\t\t// ajoute Main en tant qu'écouteur des évenements de redimensionnement\n\t\tBrowser.window.addEventListener(EventType.RESIZE, resize);\n\t\tresize();\n\t\t\n\t\t\n\t\t\n\t\t// lance le chargement des assets graphiques du preloader\n\t\tLoaderManager.getInstance().startLoadingProcess(\"preload\", loadAssets);\n\t}\t\n\t\n\t/**\n\t * lance le chargement principal\n\t */\n\tprivate function loadAssets (pLoader:GameLoader): Void {\n\t\tLoaderManager.getInstance().startLoadingProcess(\"general\", onLoadComplete);\n\t\t\n\t\t// affiche l'écran de préchargement\n\t\tUIManager.getInstance().openScreen(GraphicLoader.getInstance());\n\t\t\n\t\t\n\t\t//Browser.window.requestAnimationFrame(gameLoop);\n\t\tgameLoop();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * initialisation du jeu\n\t * @param\tpEvent evenement de chargement\n\t */\n\tprivate function onLoadComplete (): Void {\n\t\t\n\t\t// Ouvre la TitleClard\n\t\t//SoundManager.getSound(\"uiloop\").play();\n\t\tUIManager.getInstance().openScreen(TitleCard.getInstance());\n\t\t\n\t\t/*blackBarLeft.start();\n\t\tblackBarRight.start();\n\t\tblackBarTop.start();\n\t\tblackBarBot.start();\n\t\tblackBarLeft.scale.set(GameStage.getInstance().safeZone.width / blackBarLeft.width, GameStage.getInstance().safeZone.height * 2 / blackBarLeft.width);\n\t\tblackBarRight.scale.set(GameStage.getInstance().safeZone.width / blackBarRight.width, GameStage.getInstance().safeZone.height * 2 / blackBarRight.width);\n\t\ttrace(blackBarLeft.width, blackBarLeft.height, blackBarLeft.x);\n\t\tblackBarTop.scale.set(GameStage.getInstance().safeZone.width * 2 / blackBarLeft.width, GameStage.getInstance().safeZone.height/ blackBarLeft.width);\n\t\tblackBarBot.scale = blackBarTop.scale;*/\n\t}\n\t\n\n\t/**\n\t * game loop\n\t */\n\tprivate function gameLoop():Void {\n\t\tTimer.delay(gameLoop, FPS);\n\t\t//Browser.window.requestAnimationFrame(gameLoop);\n\t\trender();\n\t\temit(EventType.GAME_LOOP);\n\t\t\n\t}\n\t\n\t/**\n\t * Ecouteur du redimensionnement\n\t * @param\tpEvent evenement de redimensionnement\n\t */\n\tpublic function resize (pEvent:EventTarget = null): Void {\n\t\trenderer.resize(DeviceCapabilities.width, DeviceCapabilities.height);\n\t\tGameStage.getInstance().resize();\n\t}\n\t\n\t\n\t\n\t/**\n\t * fait le rendu de l'écran\n\t */\n\tprivate function render (): Void {\n\t\t\n\t\tif (frames++ % 2 == 0) renderer.render(stage);\n\t\telse GameStage.getInstance().updateTransform();\n\t}\n\t\t\n\t/**\n\t * détruit l'instance unique et met sa référence interne à null\n\t */\n\tpublic function destroy (): Void {\n\t\tBrowser.window.removeEventListener(EventType.RESIZE, resize);\n\t\tinstance = null;\n\t}\n\t\n}","package com.ragestudio.game;\n\nimport com.ragestudio.game.sprites.entities.Player;\nimport com.ragestudio.ui.CheatPanel;\nimport com.ragestudio.ui.UIManager;\nimport com.ragestudio.utils.events.EventType;\nimport com.ragestudio.utils.game.CollisionManager;\nimport com.ragestudio.utils.game.GameStage;\nimport com.ragestudio.utils.system.DeviceCapabilities;\nimport pixi.interaction.EventTarget;\nimport pixi.interaction.InteractionManager;\n\n/**\n * Manager (Singleton) en charge de gérer le déroulement d'une partie\n * @author Mathieu ANTHOINE\n */\nclass GameManager\n{\n\t\n\t/**\n\t * instance unique de la classe GameManager\n\t */\n\tprivate static var instance: GameManager;\n\t\n\t/**\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\n\t * @return instance unique\n\t */\n\tpublic static function getInstance (): GameManager {\n\t\tif (instance == null) instance = new GameManager();\n\t\treturn instance;\n\t}\n\t\n\tprivate function new() {\n\t\t\n\t}\n\t\n\tpublic function start (): Void {\n\t\t\n\t\t// demande au Manager d'interface de se mettre en mode \"jeu\"\n\t\tUIManager.getInstance().startGame();\t\n\t\t\n\t\t// début de l'initialisation du jeu\n\t\t\n\t\tGameStage.getInstance().getGameContainer().addChild(Player.createPlayer());\n\t\tfor (lPlayer in Player.getPlayers()) {\n\t\t\tlPlayer.x = 500;\n\t\t\tlPlayer.y = 500;\n\t\t\tlPlayer.start();\n\t\t}\n\t\tCheatPanel.getInstance().ingame();\t\n\t\t\n\t\t// enregistre le GameManager en tant qu'écouteur de la gameloop principale\n\t\tMain.getInstance().on(EventType.GAME_LOOP, gameLoop);\n\t\t\n\t}\n\t\n\t/**\n\t * boucle de jeu (répétée à la cadence du jeu en fps)\n\t */\n\tpublic function gameLoop (pEvent:EventTarget): Void {\n\t\t// le renderer possède une propriété plugins qui contient une propriété interaction de type InteractionManager\n\t\t// les instances d'InteractionManager fournissent un certain nombre d'informations comme les coordonnées globales de la souris\n\t\t//if (DeviceCapabilities.system==DeviceCapabilities.SYSTEM_DESKTOP) trace (CollisionManager.hitTestPoint(Template.getInstance().hitBox, cast(Main.getInstance().renderer.plugins.interaction,InteractionManager).mouse.global));\n\t}\n\t\n\t/**\n\t * détruit l'instance unique et met sa référence interne à null\n\t */\n\tpublic function destroy (): Void {\n\t\tMain.getInstance().off(EventType.GAME_LOOP,gameLoop);\n\t\tinstance = null;\n\t}\n\n}","package com.ragestudio.utils.game;\r\n\r\nimport com.ragestudio.utils.events.EventType;\r\nimport pixi.core.display.Container;\r\n\r\n/**\r\n * Classe de base des objets interactifs dans le jeu\r\n * Met à jour automatiquement ses données internes de position et transformation\r\n * \r\n * @author Mathieu ANTHOINE\r\n */\r\nclass GameObject extends Container\r\n{\r\n\r\n\t/**\r\n\t * méthode appelée à chaque gameLoop. Elle peut faire référence à différentes méthodes au cours du temps\r\n\t */\r\n\tpublic var doAction:Dynamic;\t\t\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t// Force la mise à jour de la matrices de transformation des éléments constituant le GameObject\r\n\t\ton(EventType.ADDED, updateTransform);\t\r\n\t\tsetModeVoid();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Force la mise à jour de la matrices de transformation des éléments constituant le GameObject\r\n\t */\r\n\tprivate function forceUpdateTransform (): Void {\r\n\t\tuntyped updateTransform();\r\n\t}\r\n\t\r\n\t/**\r\n\t * applique le mode \"ne fait rien\"\r\n\t */\r\n\tprivate function setModeVoid (): Void {\r\n\t\tdoAction = doActionVoid;\r\n\t}\r\n\t\r\n\t/**\r\n\t * fonction vide destinée à maintenir la référence de doAction sans rien faire\r\n\t */\r\n\tprivate function doActionVoid (): Void {}\r\n\r\n\t\r\n\t/**\r\n\t * applique le mode normal (mode par defaut)\r\n\t */\r\n\tprivate function setModeNormal(): Void {\r\n\t\tdoAction = doActionNormal;\r\n\t}\r\n\t\r\n\t/**\r\n\t * fonction destinée à appliquer un comportement par defaut\r\n\t */\r\n\tprivate function doActionNormal (): Void {}\r\n\t\r\n\t/**\r\n\t * Activation\r\n\t */\r\n\tpublic function start (): Void {\r\n\t\tsetModeNormal();\r\n\t}\r\n\t\r\n\t/**\r\n\t * nettoie et détruit l'instance\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tsetModeVoid();\r\n\t\toff(EventType.ADDED, updateTransform);\r\n\t\tsuper.destroy(true);\r\n\t}\r\n\t\r\n}","package com.ragestudio.utils.game;\r\n\r\nimport com.ragestudio.utils.system.DeviceCapabilities;\r\nimport haxe.Json;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Circle;\r\nimport pixi.core.math.shapes.Ellipse;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.extras.MovieClip;\r\n\r\n/**\r\n * Classe de base des objets interactifs ayant plusieurs états graphiques\r\n * Gère la représentation graphique (anim) et les conteneurs utiles au gamePlay (box) qui peuvent être de simples boites de collision ou beaucoup plus\r\n * suivant l'implémentation faite par le développeur dans les classes filles\r\n * @author Mathieu ANTHOINE\r\n * @version 0.12.0\r\n */\r\nclass StateGraphic extends GameObject\r\n{\r\n\t \r\n\t/**\r\n\t * anim de l'état courant\r\n\t */\r\n\tprivate var anim:MovieClip;\r\n\t\r\n\t/**\r\n\t * box de l'état courant\r\n\t */\r\n\tprivate var box:Container;\r\n\t\r\n\t/**\r\n\t * suffixe du nom d'export des symboles Animés\r\n\t */\r\n\tprivate var ANIM_SUFFIX (default,null):String = \"\";\r\n\t\r\n\t/**\r\n\t * suffixe du nom d'export des symboles Box\r\n\t */\r\n\tprivate var BOX_SUFFIX (default,null):String = \"box\";\t\r\n\t\r\n\t/**\r\n\t * longueur de la numérotation des textures\r\n\t */\r\n\tpublic static var textureDigits (default, set) :UInt = 4;\r\n\t\r\n\tprivate static function set_textureDigits (pDigits:UInt) : UInt {\r\n\t\tdigits = \"\";\r\n\t\tfor (i in 0...pDigits) digits += \"0\";\r\n\t\treturn textureDigits = pDigits;\t\r\n\t}\r\n\r\n\t/**\r\n\t * nombre de zéro a ajouter pour construire un nom de frame\r\n\t */\r\n\tprivate static var digits:String;\t\r\n\r\n\t/**\r\n\t * définition des textures (nombre d'images)\r\n\t */\r\n\tprivate static var texturesDefinition:Map<String,Int>;\r\n\t\r\n\t/**\r\n\t * définition des ancres des textures\r\n\t */\r\n\tprivate static var texturesAnchor:Map<String,Point>;\t\r\n\t\r\n\t/**\r\n\t * cache des textures de tous les StateGraphic\r\n\t */\r\n\tprivate static var texturesCache:Map<String,Array<Texture>>;\t\r\n\t\r\n\t/**\r\n\t * etat par défaut\r\n\t */\r\n\tprivate var DEFAULT_STATE (default, null): String = \"\";\r\n\t\r\n\t/**\r\n\t * Nom de l'asset (sert à identifier les textures à utiliser)\r\n\t * Prend le nom de la classe Fille par défaut\r\n\t */\r\n\tprivate var assetName:String;\r\n\t\r\n\t/**\r\n\t * état en cours\r\n\t */\r\n\tprivate var state:String;\r\n\t\r\n\t/**\r\n\t * Type de box de collision\r\n\t * Si boxType est égal à BoxType.NONE, aucune collision ne se fait, il n'est pas nécessaire d'avoir une boite de collision définie\r\n\t * Si boxType est égal à BoxType.SIMPLE, seul un symbole sert de Box pour tous les états, son nom d'export etant assetName+\"_\"+BOX_SUFFIX\r\n\t * Si boxType est égal à BoxType.MULTIPLE, chaque state correspond à une boite de collision, chaque state va cherche la boite assetName+\"_\"+ANIM_SUFFIX+\"_\"+BOX_SUFFIX\r\n\t * Si boxType est égal à BoxType.SELF, hitBox retourne le MovieClip anim\r\n\t */\r\n\tprivate var boxType:BoxType=BoxType.NONE;\r\n\t\r\n\t/**\r\n\t * niveau d'alpha des anim\r\n\t */\r\n\tpublic static var animAlpha:Float = 1;\r\n\t\r\n\t/**\r\n\t * niveau d'alpha des Boxes\r\n\t */\r\n\tpublic static var boxAlpha:Float = 0;\r\n\t\r\n\t/**\r\n\t * cache des boxes de tous les StateGraphic\r\n\t */\r\n\tprivate static var boxesCache:Map<String,Map<String,Dynamic>>;\r\n\t\r\n\t/**\r\n\t * l'anim est-elle terminée ?\r\n\t */\r\n\tpublic var isAnimEnd (default, null):Bool;\r\n\t\r\n\tprivate function setAnimEnd ():Void {\r\n\t\tisAnimEnd = true;\r\n\t}\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/**\r\n\t * défini l'état courant du StateGraphic\r\n\t * @param\tpState nom de l'état (run, walk...)\r\n\t * @param\tpLoop l'anim boucle (isAnimEnd sera toujours false) ou pas\r\n\t * @param\tpAutoPlay lance l'anim automatiquement\r\n\t * @param\tpStart lance l'anim à cette frame\r\n\t */\r\n\tprivate function setState (pState:String, ?pLoop:Bool = false, ?pAutoPlay:Bool=true, ?pStart:UInt = 0): Void {\r\n\t\t\r\n\t\tif (state == pState) {\r\n\t\t\tif (anim!=null) setBehavior (pLoop,pAutoPlay,pStart);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (assetName == null) assetName = Type.getClassName(Type.getClass(this)).split(\".\").pop();\r\n\t\t\r\n\t\tstate = pState;\r\n\t\t\r\n\t\tif (anim == null) {\r\n\t\t\tanim = new MovieClip (getTextures(state));\r\n\t\t\tif (boxType == BoxType.SELF) {\r\n\t\t\t\tif (box !=null) removeChild(box);\r\n\t\t\t\tbox = null;\r\n\t\t\t}\r\n\t\t\tanim.scale.set(1 /DeviceCapabilities.textureRatio , 1 / DeviceCapabilities.textureRatio);\r\n\t\t\tif (animAlpha < 1) anim.alpha = animAlpha;\r\n\t\t\taddChild(anim);\r\n\t\t} else anim.textures = getTextures(state);\r\n\r\n\t\tisAnimEnd = false;\r\n\t\tanim.onComplete = setAnimEnd;\r\n\t\tanim.anchor = getAnchor(state);\r\n\t\tsetBehavior (pLoop,pAutoPlay,pStart);\r\n\t\t\r\n\t\tif (box == null) {\r\n\t\t\tif (boxType == BoxType.SELF) {\r\n\t\t\t\tbox = anim;\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tbox = new Container();\r\n\t\t\t\tif (boxType != BoxType.NONE) createBox();\r\n\t\t\t}\r\n\t\t\taddChild(box);\r\n\t\t} else if (boxType == BoxType.MULTIPLE) {\r\n\t\t\tremoveChild(box);\r\n\t\t\tbox = new Container();\r\n\t\t\tcreateBox();\r\n\t\t\taddChild(box);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function setBehavior (?pLoop:Bool = false, ?pAutoPlay:Bool=true, ?pStart:UInt = 0):Void {\r\n\t\tanim.loop = pLoop;\r\n\t\tif (anim.totalFrames > 1) anim.gotoAndStop(pStart);\r\n\t\telse anim.gotoAndStop(0);\r\n\t\tif (pAutoPlay) anim.play();\r\n\t}\r\n\t\r\n\t/**\r\n\t * crée la ou les box de collision de l'état\r\n\t */\r\n\tprivate function createBox ():Void {\r\n\t\tvar lBoxes:Map<String,Dynamic> = getBox((boxType == BoxType.MULTIPLE ? state+ \"_\": \"\" )  + BOX_SUFFIX);\r\n\t\tvar lChild:Graphics;\r\n\t\t\r\n\t\tfor (lBox in lBoxes.keys()) {\r\n\t\t\tlChild = new Graphics();\r\n\t\t\tlChild.beginFill(0xFF2222);\r\n\t\t\tif (Std.is(lBoxes[lBox], Rectangle)) {\r\n\t\t\t\tlChild.drawRect(lBoxes[lBox].x, lBoxes[lBox].y, lBoxes[lBox].width, lBoxes[lBox].height);\r\n\t\t\t}\r\n\t\t\telse if (Std.is(lBoxes[lBox], Ellipse)) {\r\n\t\t\t\tlChild.drawEllipse(lBoxes[lBox].x, lBoxes[lBox].y, lBoxes[lBox].width, lBoxes[lBox].height);\r\n\t\t\t}\r\n\t\t\telse if (Std.is(lBoxes[lBox], Circle)) {\r\n\t\t\t\tlChild.drawCircle(lBoxes[lBox].x,lBoxes[lBox].y,lBoxes[lBox].radius);\r\n\t\t\t}\r\n\t\t\telse if (Std.is(lBoxes[lBox], Point)) {\r\n\t\t\t\tlChild.drawCircle(0, 0, 10);\r\n\t\t\t}\r\n\t\t\tlChild.endFill();\r\n\t\t\t\r\n\t\t\tlChild.name = lBox;\r\n\t\t\tif (Std.is(lBoxes[lBox], Point)) lChild.position.set(lBoxes[lBox].x, lBoxes[lBox].y);\r\n\t\t\telse lChild.hitArea = lBoxes[lBox];\r\n\t\t\t \r\n\t\t\tbox.addChild(lChild);\r\n\t\t}\r\n\t\tif (boxAlpha == 0) box.renderable = false;\r\n\t\telse box.alpha= boxAlpha;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Analyse et crée les définitions de textures\r\n\t * @param\tpJson objet contenant la description des assets\r\n\t */\r\n\tstatic public function addTextures (pJson:Json): Void {\r\n\t\tvar lFrames:Dynamic = Reflect.field(pJson, \"frames\");\r\n\t\t\r\n\t\tif (texturesDefinition == null) texturesDefinition = new Map<String,Int>();\r\n\t\tif (texturesAnchor == null) texturesAnchor = new Map<String,Point>();\r\n\t\tif (texturesCache == null) texturesCache = new Map<String,Array<Texture>>();\t\t\r\n\t\tif (digits == null) textureDigits = textureDigits;\r\n\t\t\t\t\t\t\r\n\t\tvar lID:String;\r\n\t\tvar lNum:Int;\r\n\t\t\r\n\t\tfor (lName in Reflect.fields(lFrames)) {\r\n\t\t\ttrace(lName);\r\n\t\t\tlID = lName.split(\".\")[0];\r\n\t\t\tlNum = Std.parseInt(lID.substr(-1*textureDigits));\r\n\t\t\tif (lNum != null) lID = lID.substr(0, lID.length - textureDigits);\r\n\t\t\t\r\n\t\t\tif (texturesDefinition[lID] == null) texturesDefinition[lID] = lNum == null ? 1 : lNum;\r\n\t\t\telse if (lNum > texturesDefinition[lID]) texturesDefinition[lID] = lNum;\r\n\t\t\t\r\n\t\t\tif (texturesAnchor[lID] == null) texturesAnchor[lID] = Reflect.field(lFrames, lName).pivot;\r\n\t\t}\r\n\t\t\r\n\t}\t\r\n\r\n\t/**\r\n\t * Vide le cache de textures correspondant à la description passée en paramètres\r\n\t * @param\tpJson objet contenant la description des assets\r\n\t */\r\n\tstatic public function clearTextures (pJson:Json): Void {\r\n\t\t\r\n\t\tvar lFrames:Dynamic = Reflect.field(pJson, \"frames\");\r\n\t\t\r\n\t\tif (texturesDefinition == null) return;\r\n\t\t\r\n\t\tvar lID:String;\r\n\t\tvar lNum:Int;\r\n\t\t\r\n\t\tfor (lID in Reflect.fields(lFrames)) {\r\n\t\t\t\r\n\t\t\tlID = lID.split(\".\")[0];\r\n\t\t\tlNum = Std.parseInt(lID.substr(-1*textureDigits));\r\n\t\t\tif (lNum != null) lID = lID.substr(0, lID.length - textureDigits);\r\n\t\t\t\r\n\t\t\ttexturesDefinition[lID] = null;\r\n\t\t\ttexturesAnchor[lID] = null;\r\n\t\t\ttexturesCache[lID] = null;\r\n\t\t}\r\n\t}\t\r\n\r\n\t/**\r\n\t * Cherche dans le cache général de textures le tableau de textures correspondant au state et le retourne.\r\n\t * Si le tableau de texture n'éxiste pas, il le crée et le stocke dans le cache\r\n\t * @param\tpState State de l'instance\r\n\t * @return\tle tableau de texture correspondant au state de l'instance\r\n\t */\r\n\tprivate function getTextures(pState:String):Array<Texture> {\r\n\t\t\r\n\t\tvar lID:String;\r\n\t\t\r\n\t\tif (pState == DEFAULT_STATE) lID = assetName+ANIM_SUFFIX;\r\n\t\telse lID = assetName+\"_\" + pState+ANIM_SUFFIX;\r\n\t\tif (texturesCache[lID] == null) {\r\n\t\t\tvar lFrames:UInt = texturesDefinition[lID];\r\n\t\t\tif (lFrames == 1) texturesCache[lID] =[Texture.fromFrame(lID+\".png\")];\r\n\t\t\telse {\r\n\t\t\t\ttexturesCache[lID] = new Array<Texture>();\r\n\t\t\t\tfor (i in 1...lFrames+1) texturesCache[lID].push(Texture.fromFrame(lID+(digits + i).substr(-1*textureDigits) + \".png\"));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn texturesCache[lID];\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne l'ancre suivant le state\r\n\t * @param\tpState State de l'instance\r\n\t * @return\tl'ancre\r\n\t */\r\n\tprivate function getAnchor (pState:String):Point {\r\n\t\tvar lID:String;\r\n\t\t\r\n\t\tif (pState == DEFAULT_STATE) lID = assetName+ANIM_SUFFIX;\r\n\t\telse lID = assetName+\"_\" + pState+ANIM_SUFFIX;\r\n\t\t\r\n\t\treturn texturesAnchor[lID];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Créer toutes les Boxes\r\n\t * @param\tpJson Nom du fichier contenant la description des boxes\r\n\t */\r\n\tstatic public function addBoxes (pJson:Json): Void {\r\n\t\t\r\n\t\tif (boxesCache == null) boxesCache = new Map<String,Map<String,Dynamic>>();\r\n\t\t\r\n\t\tvar lItem;\r\n\t\tvar lObj;\r\n\t\t\r\n\t\tfor (lName in Reflect.fields(pJson)) {\r\n\t\t\tlItem = Reflect.field(pJson, lName);\r\n\t\t\tboxesCache[lName] = new Map<String,Dynamic>();\t\t\t\r\n\t\t\t\r\n\t\t\tfor (lObjName in Reflect.fields(lItem)) {\r\n\t\t\t\tlObj = Reflect.field(lItem, lObjName);\r\n\t\t\t\t\r\n\t\t\t\tif (lObj.type == \"Rectangle\") boxesCache[lName][lObjName] = new Rectangle(lObj.x, lObj.y, lObj.width, lObj.height);\r\n\t\t\t\telse if (lObj.type == \"Ellipse\") boxesCache[lName][lObjName] = new Ellipse(lObj.x, lObj.y, lObj.width/2, lObj.height/2);\r\n\t\t\t\telse if (lObj.type == \"Circle\") boxesCache[lName][lObjName] = new Circle(lObj.x, lObj.y, lObj.radius);\r\n\t\t\t\telse if (lObj.type == \"Point\") boxesCache[lName][lObjName] = new Point(lObj.x, lObj.y);\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Cherche dans le cache général des boxes, celle correspondant au state demandé\r\n\t * @param\tpState State de l'instance\r\n\t * @return\tla box correspondante\r\n\t * @return\r\n\t */\r\n\tpublic function getBox (pState:String):Map<String,Dynamic> {\r\n\t\treturn boxesCache[assetName+\"_\" +pState];\r\n\t}\t\t\r\n\t\r\n\t/**\r\n\t * met en pause l'anim\r\n\t */\r\n\tpublic function pause ():Void {\r\n\t\tif (anim != null) anim.stop();\r\n\t}\r\n\t\r\n\t/**\r\n\t * relance l'anim\r\n\t */\r\n\tpublic function resume ():Void {\r\n\t\tif (anim != null) anim.play();\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne la zone de hit de l'objet\r\n\t */\r\n\tpublic var hitBox (get, null):Container;\r\n\t \r\n\tprivate function get_hitBox (): Container {\r\n\t\treturn box;\r\n\t\t// Si on veut cibler une box plus précise: return box.getChildByName(\"nom d'instance du MovieClip de type Rectangle ou Circle dans Flash IDE\");\r\n\t}\r\n\r\n\t/**\r\n\t * retourne un tableau de points de collision dont les coordonnées sont exprimées dans le systeme global\r\n\t */\r\n\tpublic var hitPoints (get, null): Array<Point>;\r\n\t \r\n\tprivate function get_hitPoints (): Array<Point> {\r\n\t\treturn null;\r\n\t\t// liste de Points : return [box.toGlobal(box.getChildByName(\"nom d'instance du MovieClip de type Point dans Flash IDE\").position,box.toGlobal(box.getChildByName(\"nom d'instance du MovieClip de type Point dans Flash IDE\").position];\r\n\t}\r\n\t\r\n\t/**\r\n\t * nettoyage et suppression de l'instance\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tanim.stop();\r\n\t\tremoveChild(anim);\r\n\t\tanim.destroy();\t\t\r\n\t\tif (box != anim) {\r\n\t\t\tremoveChild(box);\r\n\t\t\tbox.destroy();\r\n\t\t\tbox = null;\r\n\t\t}\r\n\t\tanim = null;\r\n\t\t\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.ragestudio.game.sprites;\r\n\r\nimport com.ragestudio.game.PoolManager;\r\nimport com.ragestudio.utils.game.StateGraphic;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * ...\r\n * @author Julien Fournier Nicolas Vernou\r\n */\r\nclass PoolObject extends StateGraphic\r\n{\r\n\t\r\n\t\r\n\tpublic function new(pAsset:String=null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tif (pAsset == null) pAsset = Type.getClassName(Type.getClass(this)).split(\".\").pop();\r\n\t\tassetName = pAsset;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function init ():Void \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function dispose ():Void \r\n\t{\r\n\t\tPoolManager.addToPool(assetName, this);\r\n\t\tremoveAllListeners();\r\n\t\tsetModeVoid();\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tdispose();\r\n\t\tPoolManager.available[assetName].splice(PoolManager.available[assetName].indexOf(this), 1);\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getMidCoords():Point {\r\n\t\t//var lPos:Point = parent != null ? parent.toGlobal(position) : GamePlane.getInstance().toGlobal(position);\r\n\t\treturn new Point(x + (0.5 - getAnchor(state).x) * anim.width, y + (0.5 - getAnchor(state).y) * anim.height) ;\r\n\t}\r\n}","package com.ragestudio.game.sprites;\r\nimport com.ragestudio.utils.Config;\r\nimport com.ragestudio.utils.game.BoxType;\r\nimport com.ragestudio.utils.game.GameObject;\r\nimport com.ragestudio.utils.game.StateGraphic;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * ...\r\n * @author Nicolas Vernou\r\n */\r\nclass Mobile extends PoolObject\r\n{\r\n\r\n\t//public static var actorsList:Array<StateGraphicAmplified> = new Array<StateGraphicAmplified>();\r\n\tpublic static inline var WAIT_STATE:String = \"wait\";\r\n\t\r\n\tpublic function new(?pAsset:String) \r\n\t{\r\n\t\tsuper(pAsset);\r\n\t\tboxType = BoxType.SIMPLE;\r\n\t}\r\n\t\r\n\toverride public function dispose():Void \r\n\t{\r\n\t\tif (parent != null) parent.removeChild(this);\r\n\t\tsuper.dispose();\r\n\t}\r\n\t\r\n\toverride public function start():Void \r\n\t{\r\n\t\tsuper.start();\r\n\t\tsetState(WAIT_STATE, true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permits to easily access the distance between an object and this entity, you can precise the anchor of the target if you want to take the center in consideration\r\n\t */\r\n\tprivate function getDistanceToObject(pObject:PoolObject):Float {\r\n\t\tvar lMid1:Point = pObject.getMidCoords();\r\n\t\tvar lMid2:Point = getMidCoords();\r\n\t\treturn Math.sqrt(Math.pow(lMid1.x - lMid2.x , 2)  +  Math.pow(lMid1.y - lMid2.y, 2));\r\n\t}\r\n}","package com.ragestudio.game.sprites;\r\n\r\n/**\r\n * ...\r\n * @author \r\n */\r\nclass Character extends Mobile\r\n{\r\n\r\n\tpublic function new(?pAsset:String) \r\n\t{\r\n\t\tsuper(pAsset);\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.ragestudio.game.sprites.entities;\r\nimport com.ragestudio.game.sprites.PoolObject;\r\n\r\n/**\r\n * ...\r\n * @author \r\n */\r\nclass Player extends Character\r\n{\r\n\tprivate static var list:Array<Player> = new Array<Player>();\r\n\r\n\tpublic function new(pAsset:String=null) \r\n\t{\r\n\t\tsuper(pAsset);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function createPlayer():Player\r\n\t{\r\n\t\tvar lPlayer:Player = cast(PoolManager.getFromPool(\"Player\"), Player);\r\n\t\tlist.push(lPlayer);\r\n\t\treturn lPlayer;\r\n\t}\r\n\t\r\n\tpublic static function getPlayers():Array<Player>\r\n\t{\r\n\t\treturn list;\r\n\t}\r\n\t\r\n\toverride public function dispose():Void \r\n\t{\r\n\t\tsuper.dispose();\r\n\t\tlist.splice(list.indexOf(this), 1);\r\n\t}\r\n}","package com.ragestudio.game;\r\nimport com.ragestudio.game.sprites.planes.GamePlane;\r\nimport com.ragestudio.game.sprites.entities.Player;\r\nimport com.ragestudio.game.sprites.PoolObject;\r\nimport com.ragestudio.utils.game.GameStage;\r\nimport com.ragestudio.utils.loader.GameLoader;\r\nimport haxe.Json;\r\nimport haxe.Timer;\r\nimport js.Browser;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.math.Point;\r\n\r\n\t\r\n/**\r\n * Utilitary class which has references to numerous classes and containers and is able to link strings with them, it also generates the levels.\r\n * Its main use it basicaly to generate stuff and place it where it belongs according to specified data\r\n * @author Nicolas VERNOU\r\n */\r\nclass Generator \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe LevelGenerator\r\n\t */\r\n\tprivate static var instance: Generator;\r\n\tpublic static inline var PLAYER_NAME:String = \"Player\";\r\n\tprivate var spriteSheetLoadersArray:Array<PoolObject>;\r\n\t\r\n\t/**\r\n\t * List that contains the path to every possible object we could want to generate on a level\r\n\t */\r\n\tprivate static var ELEMENT_LIST(default, never):Map<String, String> = [\r\n\tPLAYER_NAME\t\t\t\t\t=>\tType.getClassName(Player)\r\n\t/*COLLECTABLE_NAME\t\t\t=>\tType.getClassName(CollectableSimple),\r\n\t\"UpgradeDoubleJump\" \t\t=>\tType.getClassName(UpgradeDoubleJump),\r\n\t\"UpgradeShield\" \t\t\t=>\tType.getClassName(UpgradeShield),\r\n\t\"UpgradeSuperShootPlayer\" \t=>\tType.getClassName(UpgradeSuperShootPlayer),\r\n\t\"EnemyBomb\" \t\t\t\t=>\tType.getClassName(EnemyBomb),\r\n\t\"EnemyFire\" \t\t\t\t=>\tType.getClassName(EnemyFire),\r\n\t\"EnemySpeed\" \t\t\t\t=>\tType.getClassName(EnemySpeed),\r\n\t\"EnemyTurret\" \t\t\t\t=>\tType.getClassName(EnemyTurret),\r\n\t\"KillZoneDynamic\" \t\t\t=>\tType.getClassName(KillZoneDynamic),\r\n\t\"KillZoneStatic\" \t\t\t=>\tType.getClassName(KillZoneStatic),\r\n\t\"Destructible\" \t\t\t\t=>\tType.getClassName(Destructible),\r\n\t\"ShootEnemyTurret\"\t\t\t=>\tType.getClassName(ShootEnemyTurret),\r\n\t\"ShootEnemyFire\"\t\t\t=>\tType.getClassName(ShootEnemyFire),\r\n\t\"ShootPlayer\"\t\t\t\t=>\tType.getClassName(ShootPlayer),\r\n\t\"SuperShootPlayer\"\t\t\t=>\tType.getClassName(SuperShootPlayer),\r\n\tCHECKPOINT_NAME\t\t\t\t=>\tType.getClassName(Checkpoint)*/\r\n\t];\r\n\r\n\t/**\r\n\t * List that indicates in which container each element shall be\r\n\t */\r\n/*\tprivate static var CATEGORIES_LIST(default, never):Map<String, Array<String>> = [\r\n\t\"platformContainer\" \t=> [\"Platform0\", \"Platform1\"],\r\n\t\"killZonesContainer\" \t=> [\"KillZoneStatic\", \"KillZoneDynamic\"],\r\n\t\"wallContainer\" \t\t=> [\"Wall0\", \"Wall1\", \"Wall2\", \"Wall3\"],\r\n\t\"limitContainer\"\t\t=> [LIMIT_LEFT_NAME, LIMIT_RIGHT_NAME],\r\n\t\"groundContainer\"\t\t=> [GROUND_NAME],\r\n\t\"destructibleContainer\" => [\"BridgeLeft\", \"BridgeRight\", \"Destructible\"],\r\n\t\"enemiesContainer\"\t\t=> [\"EnemyFire\", \"EnemyTurret\", \"EnemyBomb\", \"EnemySpeed\"],\r\n\t\"collectableContainer\" \t=> [COLLECTABLE_NAME, CHECKPOINT_NAME, \"UpgradeDoubleJump\", \"UpgradeShield\", \"UpgradeSuperShootPlayer\"]\r\n\t];*/\r\n\r\n\t\r\n\t/**\r\n\t * List that indicates what type of obstacle we're dealing with\r\n\t */\r\n/*\tprivate static var OBSTACLES_LIST(default, never):Map<String, Array<String>> = [\r\n\t\"obstaclePlatform\" \t=> [\"BridgeLeft\", \"BridgeRight\", \"Platform0\", \"Platform1\"],\r\n\t\"obstacleFull\" \t=> [\"Wall0\", \"Wall1\", \"Wall2\", \"Wall3\", GROUND_NAME, LIMIT_LEFT_NAME, LIMIT_RIGHT_NAME]\r\n\t];*/\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Generator {\r\n\t\tif (instance == null) instance = new Generator();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new()  \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Reads a Json file to place all the elements of a level on the GameStage\r\n\t * @param\tpLevel Json that will be read for generation\r\n\t */\r\n\t/*public function generateLevel(pLevel:Json):Void {\r\n\t\tClippingManager.getInstance().init(pLevel);\r\n\t\tPoolManager.init();\r\n\t\tScrollingPlane.initialPosition.y = 0;\r\n\t\t\r\n\t\t//We create the level using the corresponding json\r\n\t\tfor (i in Reflect.fields(pLevel)) {\r\n\t\t\t//We do not want to create instances with the grid stats\r\n\t\t\tif (i == ClippingManager.GRID_NAME) continue;\r\n\t\t\t\r\n\t\t\t//We create an element reference from the json file\r\n\t\t\tvar jsonObject:Dynamic = Reflect.field(pLevel, i);\r\n\t\t\tvar lPos:Point = new Point(jsonObject.x, jsonObject.y);\r\n\t\t\t//Add the element to the clipping/game grid\r\n\t\t\tClippingManager.getInstance().addToGrid(i, lPos.x, lPos.y, jsonObject.width, jsonObject.height);\r\n\t\t\t\r\n\t\t\t//The player is created here, else it would cause problems going forward, specialy considering the camera\r\n\t\t\tif (jsonObject.type == PLAYER_NAME) {\r\n\t\t\t\tgenerateElement(jsonObject, i, false);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Sets limits to the camera with ground, limitLefts and limitRights\r\n\t\t\tif (jsonObject.type == GROUND_NAME && (lPos.y < ScrollingPlane.initialPosition.y ||  ScrollingPlane.initialPosition.y == 0)) {\r\n\t\t\t\tScrollingPlane.initialPosition.y = lPos.y;\r\n\t\t\t\tCamera.getInstance().limitBottom = lPos.y + jsonObject.height;\r\n\t\t\t}\r\n\t\t\telse if (jsonObject.type == LIMIT_LEFT_NAME) Camera.getInstance().limitLeft = lPos.x;\r\n\t\t\telse if (jsonObject.type == LIMIT_RIGHT_NAME) Camera.getInstance().limitRight = lPos.x + jsonObject.width*2;\r\n\t\t}\r\n\t\t\r\n\t\tpreloadSpriteSheets();\r\n\t}\r\n\t*/\r\n\t/**\r\n\t * Creates and places an element using data contained in a json object and gives it a name\r\n\t * @param\tpJson json object which contains the relevant data\r\n\t * @param\tpName which name should be assigned to this element\r\n\t * @return  Returns the instance created\r\n\t */\r\n\tpublic static function generateElement(pJson:Dynamic, pName:String, pCheckForExisting:Bool = true): PoolObject {\r\n\t\tvar lPos:Point = new Point(pJson.x, pJson.y);\r\n\t\tvar lContainer:Container = getRightContainer(pJson.type);\r\n\t\t\r\n\t\t//If there is already a child by that name, doesn't add it\r\n\t\tif (pCheckForExisting && lContainer.getChildByName(pName) != null) return cast(lContainer.getChildByName(pName), PoolObject);\r\n\t\t\r\n\t\t//If we're talking about the player, a new instance isn't created and it's only instance is used instead\r\n\t\tvar lElement:PoolObject = PoolManager.getFromPool(pJson.type);\r\n\t\t\r\n\t\tlElement.name = pName;\r\n\t\tlElement.x = lPos.x;\r\n\t\tlElement.y = lPos.y;\r\n\t\tlElement.scale.x = pJson.scaleX;\r\n\t\tlElement.scale.y = pJson.scaleY;\r\n\t\tlElement.rotation = pJson.rotation / 180 * Math.PI;\r\n\t\t\r\n\t\t\r\n\t\tlContainer.addChild(lElement);\r\n\t\t\r\n\t\tlElement.start();\r\n\t\t\r\n\t\treturn lElement;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates all kinds of stuff to add their textures to the texture cache beforehand\r\n\t */\r\n/*\tpublic function preloadSpriteSheets():Void {\r\n\t\tspriteSheetLoadersArray = [];\r\n\t\tfor (lType in ELEMENT_LIST.keys()) {\r\n\t\t\tvar lInstance:PoolObject = PoolManager.getFromPool(lType);\r\n\t\t\tGamePlane.getInstance().addChild(lInstance);\r\n\t\t\tlInstance.x = Player.getInstance().x-10000;\r\n\t\t\tlInstance.y = Player.getInstance().y-10000;\r\n\t\t\t\r\n\t\t\tlInstance.start();\r\n\t\t\tlInstance.setModeVoid();\r\n\t\t\tspriteSheetLoadersArray.push(lInstance);\r\n\t\t}\r\n\r\n\t}*/\r\n\t\t\r\n\t/**\r\n\t * Gets the right element considering the type from json file. Will go through different lists to make it dynamicaly.\r\n\t * @param\tpClassName\r\n\t * @return\r\n\t */\r\n\tpublic static function createInstanceFromStringType(pElementName:String):PoolObject {\r\n\t\tvar lElement:PoolObject;\r\n\t\t\r\n/*\t\tif (OBSTACLES_LIST[\"obstaclePlatform\"].indexOf(pElementName) >= 0) {\r\n\t\t\tlElement = new ObstaclePlatform(pElementName);\r\n\t\t}\r\n\t\telse if (OBSTACLES_LIST[\"obstacleFull\"].indexOf(pElementName) >= 0) {\r\n\t\t\tlElement = new ObstacleFull(pElementName);\r\n\t\t}\r\n\t\telse*/ \r\n\t\tvar lPath:String = getPathToClass(pElementName);\r\n\t\tlElement = Type.createInstance(Type.resolveClass(lPath), []);\r\n\t\t\r\n\t\treturn lElement;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Searches through CATEGORIES_LIST to get what container an element should be added to, so that we can keep a good looking element superposition\r\n\t * @param\tpElementType Class/Type name of the element that will be searched in CATEGORIES_LIST\r\n\t * @return\r\n\t */\r\n\tpublic static function getRightContainer(pElementType:String):Container {\r\n/*\t\tif (CATEGORIES_LIST[\"collectableContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().collectableContainer;\r\n\t\t}\r\n\t\telse if (CATEGORIES_LIST[\"destructibleContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().destructibleContainer;\r\n\t\t}\r\n\t\telse if (CATEGORIES_LIST[\"wallContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().wallContainer;\r\n\t\t}\r\n\t\telse if (CATEGORIES_LIST[\"enemiesContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().enemiesContainer;\r\n\t\t}\r\n\t\telse if (CATEGORIES_LIST[\"limitContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().limitContainer;\r\n\t\t}\r\n\t\telse if (CATEGORIES_LIST[\"groundContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().groundContainer;\r\n\t\t}\r\n\t\telse if (CATEGORIES_LIST[\"platformContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().enemiesContainer;\r\n\t\t}\r\n\t\telse if (CATEGORIES_LIST[\"killZonesContainer\"].indexOf(pElementType) >= 0) {\r\n\t\t\treturn GamePlane.getInstance().killZonesContainer;\r\n\t\t}*/\r\n\t\t\r\n\t\treturn GamePlane.getInstance().limitContainer;\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Finds the path to a class from the ELEMENT_LIST, only thanks to its name\r\n\t * @param\tpClassName\r\n\t * @return\r\n\t */\r\n\tprivate static function getPathToClass(pClassName:String):String {\r\n\t\tvar path:String;\r\n\t\tif (ELEMENT_LIST[pClassName] != null) return ELEMENT_LIST[pClassName];\r\n\t\ttrace(\"ERROR 404 : Path not found\");\r\n\t\treturn ELEMENT_LIST[PLAYER_NAME];\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.ragestudio.game;\r\nimport com.ragestudio.game.Generator;\r\nimport com.ragestudio.game.sprites.PoolObject;\r\nimport com.ragestudio.utils.loader.GameLoader;\r\nimport haxe.Json;\r\n\r\n/**\r\n * ...\r\n * @author Julien Fournier Nicolas Vernou\r\n */\r\nclass PoolManager\r\n{\r\n\tpublic static var jsonPool:Map<String,Int> = new Map<String,Int>();\r\n\tpublic static var available:Map<String,Array<PoolObject>> = new Map<String,Array<PoolObject>>();\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function init(): Void {\r\n\t\t\r\n\t\tvar poolJson:Json = GameLoader.getContent(\"pool.json\");\r\n\t\tvar jsonObject:Array<String> = Reflect.fields(poolJson);\r\n\t\t//We create all instances and fill the pool of objects, using what is found in pool.json\r\n\t\tfor (key in jsonObject)\t{\r\n\t\t\tfor (i in 0 ... Reflect.field(poolJson, key))\r\n\t\t\t{\r\n\t\t\t\tPoolManager.addToPool(key, Generator.createInstanceFromStringType(key));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Ajoute une instance au tableau des instances disponibles.\r\n\t * @param\tpType : type de l'instance\r\n\t * @param\tpInstance : instance\r\n\t */\r\n\tpublic static function addToPool (pType:String, pInstance:PoolObject):Void \r\n\t{ \r\n\t\tif (!available.exists(pType)) available.set(pType, []);\r\n\t\tavailable[pType].unshift(pInstance); \r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Prend une instance dans le tableau des instances disponibles\r\n\t * @param\tpType : type de l'instance\r\n\t * @return une instance\r\n\t */\r\n\tpublic static function getFromPool (pType:String):PoolObject \r\n\t{\r\n\t\tvar lInstance:PoolObject;\r\n\t\tif (!available.exists(pType) || available[pType].length == 0) {\r\n\t\t\tlInstance = Generator.createInstanceFromStringType(pType);\r\n\t\t\taddToPool(pType, lInstance);\r\n\t\t}\r\n\t\t//trace(\"Found \" + pType + \" n°\" + available[pType].length);\r\n\t\tlInstance = available[pType].pop();\r\n\t\t\r\n\t\tlInstance.init();\r\n\t\treturn lInstance;\r\n\t}\r\n\t\r\n\r\n\r\n\tpublic static function clear (?pType:String = null):Void \r\n\t{\r\n\t\tavailable.remove(pType);\r\n\t}\r\n\t\r\n\tpublic static function clearAll ():Void \r\n\t{\r\n\t\tfor (lType in available.keys()) {\r\n\t\t\t/*for (lElement in available[lType]) {\r\n\t\t\t\tlElement.destroy();\r\n\t\t\t}*/\r\n\t\t\tclear(lType);\r\n\t\t}\r\n\t}\r\n}","package com.ragestudio.game.sprites.planes;\r\n/*import cloudkid.Emitter;\r\nimport cloudkid.Particle;*/\r\nimport com.ragestudio.utils.game.GameObject;\r\nimport com.ragestudio.utils.loader.GameLoader;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.core.textures.Texture;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Nicolas Vernou\r\n */\r\nclass GamePlane extends GameObject\r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Gameplane\r\n\t */\r\n\tprivate static var instance: GamePlane;\r\n\t\r\n\tpublic var wallContainer:Container = new Container();\r\n\tpublic var groundContainer:Container = new Container();\r\n\tpublic var limitContainer:Container = new Container();\r\n\tpublic var platformContainer:Container = new Container();\r\n\tpublic var destructibleContainer:Container = new Container();\r\n\tpublic var killZonesContainer:Container = new Container();\r\n\tpublic var enemiesContainer:Container = new Container();\r\n\tpublic var collectableContainer:Container = new Container();\r\n\t\r\n\r\n\t\r\n\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): GamePlane {\r\n\t\tif (instance == null) instance = new GamePlane();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\taddChild(platformContainer);\r\n\t\taddChild(destructibleContainer);\r\n\t\taddChild(wallContainer);\r\n\t\taddChild(groundContainer);\r\n\t\taddChild(enemiesContainer);\r\n\t\taddChild(collectableContainer);\r\n\t\taddChild(limitContainer);\r\n\t\taddChild(killZonesContainer);\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tremoveChild(platformContainer);\r\n\t\tremoveChild(destructibleContainer);\r\n\t\tremoveChild(wallContainer);\r\n\t\tremoveChild(groundContainer);\r\n\t\tremoveChild(enemiesContainer);\r\n\t\tremoveChild(collectableContainer);\r\n\t\tremoveChild(limitContainer);\r\n\t\tremoveChild(killZonesContainer);\r\n\t\tif (parent != null) parent.removeChild(this);\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.ragestudio.ui;\r\n\r\nimport com.ragestudio.game.sprites.entities.Player;\r\nimport com.ragestudio.utils.Config;\r\nimport dat.gui.GUI;\r\n\r\n\t\r\n/**\r\n * Classe permettant de manipuler des parametres du projet au runtime\r\n * Si la propriété Config.debug et à false ou que la propriété Config.data.cheat est à false, aucun code n'est executé.\r\n * Il n'est pas nécessaire de retirer ou commenter le code du CheatPanel dans la version \"release\" du jeu\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass CheatPanel \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe CheatPanel\r\n\t */\r\n\tprivate static var instance: CheatPanel;\r\n\t\r\n\t/**\r\n\t * instance de dat.GUI composée par le CheatPanel\r\n\t */\r\n\tprivate var gui:GUI;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): CheatPanel {\r\n\t\tif (instance == null) instance = new CheatPanel();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tinit();\r\n\t}\r\n\t\r\n\tprivate function init():Void {\r\n\t\tif (Config.debug && Config.data.cheat) gui = new GUI();\r\n\t}\r\n\t\r\n\t// exemple de méthode configurant le panneau de cheat suivant le contexte\r\n\tpublic function ingame (): Void {\r\n\t\t// ATTENTION: toujours intégrer cette ligne dans chacune de vos méthodes pour ignorer le reste du code si le CheatPanel doit être désactivé\r\n\t\tif (gui == null) return;\r\n\t\t\r\n\t\t\r\n\t\tgui.add(Player.getPlayers(), \"x\", -1000, 1000).listen();\r\n\t\tgui.add(Player.getPlayers(), \"y\", -500, 500).listen();\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * vide le CheatPanel\r\n\t */\r\n\tpublic function clear ():Void {\r\n\t\tif (gui == null) return;\r\n\t\tgui.destroy();\r\n\t\tinit();\r\n\t}\t\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.ragestudio.utils.loader;\r\nimport com.ragestudio.utils.events.LoadEventType;\r\nimport com.ragestudio.utils.sounds.SoundDef;\r\nimport com.ragestudio.utils.sounds.SoundManager;\r\nimport com.ragestudio.utils.Config;\r\nimport haxe.Json;\r\nimport howler.Howl;\r\nimport howler.Howler;\r\nimport js.html.XMLSerializer;\r\nimport pixi.loaders.Loader;\r\nimport pixi.loaders.Resource;\r\nimport pixi.loaders.ResourceLoader;\r\nimport webfont.WebFontLoader;\r\n\r\n/**\r\n * Classe de chargement\r\n * Cette classe permet de gérer des chargements par lot aussi bien de fichiers textes que de ressources graphiques ou du son\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass GameLoader extends Loader\r\n{\r\n\r\n\t/**\r\n\t * liste des fichiers sons à charger\r\n\t */\r\n\tprivate var soundsList:Array<String>;\r\n\t\r\n\tprivate var soundsSpecs:Map<String,HowlOptions>;\r\n\t\r\n\t/**\r\n\t * liste des fichiers chargés\r\n\t */\r\n\tprivate static var txtLoaded:Map<String,Dynamic> = new Map<String,Dynamic>();\r\n\t\r\n\t/**\r\n\t* retourne le contenu chargé pour le chemin de fichier passé en paramètre\r\n\t* @param\tpFile chemin du fichier\r\n\t* @return\tressource (JSon ou Xml)\r\n\t*/\r\n\tpublic static function getContent (pFile:String):Dynamic {\r\n\t\treturn txtLoaded[Config.txtsPath+pFile];\r\n\t}\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsoundsList = [];\r\n\t\tsoundsSpecs = new Map();\r\n\t\tsuper();\r\n\t\tonce(LoadEventType.COMPLETE, onComplete);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t* ajoute un fichier de type texte à la liste de chargement (JSon ou Xml)\r\n\t* @param\tpUrl chaine de caractères spécifiant le chemin vers le fichier\r\n\t*/\r\n\tpublic function addTxtFile (pUrl:String):Void {\r\n\t\tvar lUrl:String = Config.txtsPath + pUrl;\r\n\t\tadd(Config.url(lUrl));\r\n\t}\t\r\n\t\r\n\t/**\r\n\t* ajoute un fichier d'assets à la liste de chargement\r\n\t* @param\tpUrl chaine de caractère spécifiant le nom du fichier\r\n\t*/\r\n\tpublic function addAssetFile (pUrl:String):Void {\t\r\n\t\tvar lUrl:String = Config.assetsPath + pUrl;\r\n\t\tadd(Config.url(lUrl));\t\t\r\n\t}\r\n\r\n\t/**\r\n\t* ajoute une liste de sons à la liste de chargement\r\n\t* @param\tpUrl chaine de caractère spécifiant le nom du fichier\r\n\t*/\r\n\tpublic function addSoundFile (pUrl:String):Void {\t\r\n\t\tvar lUrl:String = Config.soundsPath + pUrl;\r\n\t\tsoundsList.push(lUrl);\r\n\t\tadd(Config.url(lUrl));\r\n\t}\t\r\n\t\r\n\t/**\r\n\t* ajoute un fichier css de polices de caractère\r\n\t* @param\tpUrl chaine de caractère spécifiant le nom du fichier\r\n\t*/\r\n\tpublic function addFontFile (pUrl:String):Void {\t\r\n\t\tvar lUrl:String = Config.fontsPath + pUrl;\r\n\t\tadd(Config.url(lUrl));\t\t\r\n\t}\r\n\t\r\n\tprivate function parseData (pResource:Resource, pNext:Void->Void): Void {\r\n\t\t\r\n\t\ttrace (pResource.url + \" loaded\");\r\n\t\t\r\n\t\tvar lUrl:String = pResource.url.split(\"?\")[0];\r\n\t\t\r\n\t\tif (lUrl.indexOf(\".css\") > 0) {\r\n\t\t\t\r\n\t\t\tvar lData:Array<String> = pResource.data.split(\";\");\r\n\t\t\tvar lFamilies:Array<String> = [];\r\n\t\t\tvar lReg:EReg = ~/font-family:\\s?(.*)/; \r\n\t\t\t\r\n\t\t\tfor (i in 0...lData.length) {\r\n\t\t\t\tif (lReg.match(lData[i])) lFamilies.push(lReg.matched(1));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar lWebFontConfig = {\r\n\t\t\t\tcustom: {\r\n\t\t\t\t\tfamilies: lFamilies,\r\n\t\t\t\t\turls: [Config.fontsPath+\"fonts.css\"],\r\n\t\t\t\t},\r\n\r\n\t\t\t\tactive: pNext\r\n\t\t\t};\r\n\t\t   \r\n\t\t\tWebFontLoader.load(lWebFontConfig);\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (pResource.isJson) {\r\n\t\t\t\r\n\t\t\ttxtLoaded[lUrl] = pResource.data;\r\n\t\t\t\r\n\t\t\tif (soundsList.length>0) { \r\n\t\t\t\r\n\t\t\t\tvar lData:SoundDef;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...soundsList.length) {\r\n\t\t\t\t\tif (lUrl == soundsList[i]) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsoundsList.splice(i, 1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlData = pResource.data;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tfor (j in 0...lData.extensions.length) {\r\n\t\t\t\t\t\t\tif (Howler.codecs(lData.extensions[j])) {\r\n\t\t\t\t\t\t\t\taddSounds(lData.fxs,false,lData.extensions,lData.extensions[i]);\r\n\t\t\t\t\t\t\t\taddSounds(lData.musics,true,lData.extensions,lData.extensions[i]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (pResource.isXml) txtLoaded[lUrl] = Xml.parse(new XMLSerializer().serializeToString(pResource.data));\r\n\t\t\r\n\t\tpNext();\r\n\t}\r\n\t\r\n\tprivate function manageCache (pResource:Resource, pNext:Void->Void): Void {\r\n\t\tif  (pResource.name != pResource.url) pResource.url = Config.url(pResource.url);\r\n\t\tpNext();\r\n\t}\r\n\t\r\n\tprivate function addSounds (pList:Dynamic, pLoop:Bool, pExtensions:Array<String>, pCodec:String): Void {\t\r\n\t\tvar lUrl:String;\r\n\t\tfor (lID in Reflect.fields(pList)) {\r\n\t\t\tlUrl = Config.url(Config.soundsPath + lID + \".\" + pCodec);\r\n\t\t\tsoundsSpecs.set(lID, {urls:[lUrl],volume:Reflect.field(pList, lID) / 100, loop:pLoop} );\r\n\t\t\tadd(lUrl);\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function load (?cb:Void -> Void):ResourceLoader {\r\n\t\tbefore(manageCache);\r\n\t\tafter(parseData);\r\n\t\treturn super.load();\r\n\t}\r\n\t\r\n\tprivate function onComplete ():Void {\r\n\t\tfor (lID in soundsSpecs.keys()) {\r\n\t\t\tSoundManager.addSound(lID, new Howl (soundsSpecs[lID]));\r\n\t\t}\r\n\t}\r\n\t\r\n}","package com.ragestudio.ui;\r\nimport com.ragestudio.game.GameManager;\r\nimport com.ragestudio.ui.screens.GraphicLoader;\r\nimport com.ragestudio.utils.Config;\r\nimport com.ragestudio.utils.events.LoadEventType;\r\nimport com.ragestudio.utils.game.StateGraphic;\r\nimport com.ragestudio.utils.loader.GameLoader;\r\nimport com.ragestudio.utils.system.DeviceCapabilities;\r\nimport haxe.Constraints.Function;\r\n\r\n/**\r\n * Class utilitaire permettant de manager simplement les chargements en les découpants en phases\r\n * @author Nicolas Vernou\r\n */\r\nclass LoaderManager extends GameLoader\r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Level1\r\n\t */\r\n\tprivate static var instance: LoaderManager;\r\n\t\r\n\tpublic static var PRELOAD_PHASE_NAME (default, never): String = \"preload\";\t\t//What string shall be entered to load the preload phase\r\n\tpublic static var GENERAL_PHASE_NAME (default, never): String = \"general\";\t\t//\"                                      \" general phase\r\n\tpublic static var WORLD_PHASE_NAME (default, never): String = \"world\";\t\t\t//Currently obsolete, LevelButton.WORLD_PREFIX will be used instead\r\n\t\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): LoaderManager {\r\n\t\tif (instance == null) instance = new LoaderManager();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Launches a loading process corresponding to a certain phase of the game. There are currently 3 phases : preload, general and world(1, 2 or 3) internaly managed.\r\n\t * @param\tpLoadingPhase : Which phase should be launching\r\n\t * @param\tpSuccessCallback : Is there a function that should be executed on the loading's end and success\r\n\t * @return\t\r\n\t */\r\n\tpublic function startLoadingProcess(pLoadingPhase:String, ?pSuccessCallback:Function):Void {\r\n\t\tvar lLoader:GameLoader = new GameLoader();\r\n\t\tif (pLoadingPhase == PRELOAD_PHASE_NAME) {\t\t\t\t// ------------------ PRELOAD -------------------\r\n\t\t\t//Assets\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.preload_Fonts, lLoader.addFontFile);\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.preload_stateGraphic_Textures, lLoader.addAssetFile);\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.preload_Assets, lLoader.addAssetFile);\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (pLoadingPhase == GENERAL_PHASE_NAME) {\t\t\t// --------------- GENERAL LOADING --------------\r\n\t\t\t//Assets\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.general_Assets, lLoader.addAssetFile);\r\n\t\t\t//Optimized textures\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.general_stateGraphic_Textures, lLoader.addAssetFile);\r\n\t\t\t//Sounds\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.general_Sounds, lLoader.addSoundFile);\r\n\t\t\t//Fonts\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.general_Fonts, lLoader.addFontFile);\r\n\t\t\t//Texts\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.general_Texts, lLoader.addTxtFile);\r\n\t\t\t\r\n\t\t\t//Update graphique\r\n\t\t\tlLoader.on(LoadEventType.PROGRESS, onLoadProgress);\r\n\t\t\t\r\n\t\t}\r\n\t\telse if (pLoadingPhase == WORLD_PHASE_NAME) {\t\t\t// --------------- WORLDS LOADING ---------------\r\n\t\t\t\r\n\t\t\t\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.world_Assets, lLoader.addAssetFile);\r\n\t\t\texecuteFunctionOnAllArrayElements(Config.data.world_stateGraphic_Textures, lLoader.addAssetFile);\r\n\r\n\t\t\t//Update graphique\r\n\t\t\tlLoader.on(LoadEventType.PROGRESS, onLoadProgress);\r\n\t\t\t\r\n\t\t}\r\n\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t// ----------------- UNKNOWN --------------------\r\n\t\t\ttrace('Unknown loading phase \"' + pLoadingPhase +'\". Should be : \"' + PRELOAD_PHASE_NAME + '\", \"' + GENERAL_PHASE_NAME + '\" or \"' + WORLD_PHASE_NAME + '\". Aborted loading process');\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\t\r\n\t\tlLoader.once(LoadEventType.COMPLETE, function() { onProcessComplete(lLoader, pLoadingPhase, pSuccessCallback); } );\r\n\t\t\r\n\t\tlLoader.load();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Transmits the loading parameters to the graphic element\r\n\t * @param\tpEvent Loading event\r\n\t */\r\n\tprivate function onLoadProgress (pLoader:GameLoader): Void {\r\n\t\tGraphicLoader.getInstance().update(pLoader.progress / 100);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Manages stateGraphic textures and what comes after a loading phase\r\n\t * @param\tpLoader\r\n\t * @param\tpLoadingPhase\r\n\t * @param\tpSuccessCallback\r\n\t */\r\n\tpublic function onProcessComplete(pLoader:GameLoader, pLoadingPhase:String, pSuccessCallback:Function):Void {\r\n\t\tpLoader.off(LoadEventType.PROGRESS, function() { onProcessComplete(pLoader, pLoadingPhase, pSuccessCallback); } );\r\n\t\t\r\n\t\tif (pLoadingPhase == PRELOAD_PHASE_NAME) {\t\t\t// ------------------ PRELOAD -------------------\r\n\t\t\taddTexturesToStateGraphic(Config.data.preload_stateGraphic_Textures);\r\n\t\t\ttrace(Config.data.preload_stateGraphic_Textures);\r\n\t\t\t\r\n\t\t}\r\n\t\telse if  (pLoadingPhase == GENERAL_PHASE_NAME) {\t//------------ GENERAL --------------\r\n\t\t\taddTexturesToStateGraphic(Config.data.general_stateGraphic_Textures);\r\n\t\t\tStateGraphic.addBoxes(GameLoader.getContent(\"boxes.json\"));\r\n\t\t\t\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t//------------- WORLD ---------------\r\n\t\telse if (pLoadingPhase == WORLD_PHASE_NAME) {\r\n\t\t\t//Adds the right textures to StateGraphic considering the world we're trying to load\r\n\t\t\t\r\n\t\t\taddTexturesToStateGraphic(Config.data.world_stateGraphic_Textures);\r\n\t\t}\r\n\t\tpSuccessCallback();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permits to execute a function with every element of an array as its parameter\r\n\t * @param\tpElementsArray : Array containing every elements we need\r\n\t * @param\tpFunction : Function that shall be executed with the elements as its parameter\r\n\t */\r\n\tpublic function executeFunctionOnAllArrayElements(pElementsArray:Array<String>, pFunction:Function, pOptimized:Bool = false):Void {\r\n\t\tvar lLength:Int = pElementsArray.length;\r\n\t\tfor (i in 0...lLength) {\r\n\t\t\tpFunction((pOptimized ? (DeviceCapabilities.textureType + \"/\") : \"\" ) + pElementsArray[i]);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds every texture paths contained in an array to StateGraphic\r\n\t * @param\tpTexturesArray : Array containing every elements we need\r\n\t */\r\n\tpublic function addTexturesToStateGraphic(pTexturesArray:Array<String>):Void {\r\n\t\tvar lLength:Int = pTexturesArray.length;\r\n\t\tfor (i in 0...lLength) {\r\n\t\t\t// transmet à StateGraphic la description des planches de Sprites utilisées par les anim MovieClip des instances de StateGraphic\r\n\t\t\tStateGraphic.addTextures(GameLoader.getContent(pTexturesArray[i]));\r\n\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n}","package com.ragestudio.ui;\n\nimport com.ragestudio.ui.hud.Hud;\nimport com.ragestudio.utils.game.GameStage;\nimport com.ragestudio.utils.ui.Popin;\nimport com.ragestudio.utils.ui.Screen;\nimport pixi.core.display.Container;\n\n/**\n * Manager (Singleton) en charge de gérer les écrans d'interface\n * @author Mathieu ANTHOINE\n */\nclass UIManager \n{\n\t\n\t/**\n\t * instance unique de la classe UIManager\n\t */\n\tprivate static var instance: UIManager;\n\t\n\t\n\t/**\n\t * tableau des popins ouverts\n\t */\n\tprivate var popins:Array<Popin>;\n\n\tpublic function new() \n\t{\n\t\tpopins = [];\n\t}\n\t\n\t/**\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\n\t * @return instance unique\n\t */\n\tpublic static function getInstance (): UIManager {\n\t\tif (instance == null) instance = new UIManager();\n\t\treturn instance;\n\t}\n\t\n\t/**\n\t * Ajoute un écran dans le conteneur de Screens en s'assurant qu'il n'y en a pas d'autres\n\t * @param\tpScreen Screen à ouvrir\n\t */\n\tpublic function openScreen (pScreen: Screen): Void {\n\t\tcloseScreens();\n\t\tGameStage.getInstance().getScreensContainer().addChild(pScreen);\n\t\tpScreen.open();\n\t}\n\t\n\t/**\n\t * Supprime les écrans dans le conteneur de Screens\n\t */\n\tpublic function closeScreens (): Void {\n\t\tvar lContainer:Container = GameStage.getInstance().getScreensContainer();\n\t\twhile (lContainer.children.length > 0) {\n\t\t\tvar lCurrent:Screen = cast(lContainer.getChildAt(lContainer.children.length - 1), Screen);\n\t\t\tlCurrent.interactive = false;\n\t\t\tlContainer.removeChild(lCurrent);\n\t\t\tlCurrent.close();\n\t\t}\n\t}\n\t\n\t/**\n\t * Ajoute un popin dans le conteneur de Popin\n\t * @param\tpPopin Popin à ouvrir\n\t */\n\tpublic function openPopin (pPopin: Popin): Void {\n\t\tpopins.push(pPopin);\n\t\tGameStage.getInstance().getPopinsContainer().addChild(pPopin);\n\t\tpPopin.open();\n\t}\n\t\n\t/**\n\t * Supprime le popin dans le conteneur de Screens\n\t */\n\tpublic function closeCurrentPopin (): Void {\n\t\tif (popins.length == 0) return;\n\t\tvar lCurrent:Popin = popins.pop();\n\t\tlCurrent.interactive = false;\n\t\tGameStage.getInstance().getPopinsContainer().removeChild(lCurrent);\n\t\tlCurrent.close();\n\t\t\n\t}\n\t\n\t/**\n\t * Ajoute le hud dans le conteneur de Hud\n\t */\n\tpublic function openHud (): Void {\n\t\tGameStage.getInstance().getHudContainer().addChild(Hud.getInstance());\n\t\tHud.getInstance().open();\n\t}\n\t\n\t/**\n\t * Retire le hud du conteneur de Hud\n\t */\n\tpublic function closeHud (): Void {\n\t\tGameStage.getInstance().getHudContainer().removeChild(Hud.getInstance());\n\t\tHud.getInstance().close();\n\t}\n\t\n\t/**\n\t * met l'interface en mode jeu\n\t */\n\t public function startGame (): Void {\n\t\tcloseScreens();\n\t\topenHud();\n\t}\n\t\n\t/**\n\t * détruit l'instance unique et met sa référence interne à null\n\t */\n\tpublic function destroy (): Void {\n\t\tinstance = null;\n\t}\n\n}","package com.ragestudio.utils.ui;\r\n\r\nimport com.ragestudio.utils.events.EventType;\r\nimport com.ragestudio.utils.events.MouseEventType;\r\nimport com.ragestudio.utils.events.TouchEventType;\r\nimport com.ragestudio.utils.game.GameObject;\r\nimport com.ragestudio.utils.game.GameStage;\r\nimport com.ragestudio.utils.ui.UIPositionable;\r\nimport com.ragestudio.utils.Config;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * Base de tous les conteneurs d'interface\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass UIComponent extends GameObject\r\n{\r\n\r\n\tprivate var positionables:Array<UIPositionable> = [];\r\n\t\r\n\tprivate var isOpened:Bool;\r\n\t\r\n\tprivate var modalZone:Sprite;\r\n\t\r\n\tprivate var _modal:Bool = true;\r\n\t\r\n\t// TODO: pouvoir le varier dynamiquement\r\n\tpublic var modalImage:String=\"assets/alpha_bg.png\";\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\tpublic function open (): Void {\r\n\t\tif (isOpened) return;\r\n\t\tisOpened = true;\r\n\t\tmodal = _modal;\r\n\t\tGameStage.getInstance().on(EventType.RESIZE, onResize);\r\n\t\tonResize();\r\n\t}\r\n\t\r\n\t//TODO: verifier si y a besoin d'une variable privée ou si on peut utiliser modal direct\r\n\t\r\n\tpublic var modal (get, set):Bool;\r\n\t\r\n\tprivate function get_modal ():Bool {\r\n\t\treturn _modal;\r\n\t}\r\n\t\r\n\tprivate function set_modal (pModal:Bool):Bool {\r\n\t\t_modal = pModal;\r\n\t\t\r\n\t\tif (_modal) {\r\n\t\t\tif (modalZone == null) {\r\n\t\t\t\tmodalZone = new Sprite(Texture.fromImage(Config.url(modalImage)));\r\n\t\t\t\tmodalZone.interactive = true;\r\n\t\t\t\tmodalZone.on(MouseEventType.CLICK, stopPropagation);\r\n\t\t\t\tmodalZone.on(TouchEventType.TAP, stopPropagation);\r\n\t\t\t\tpositionables.unshift({ item:modalZone, align:UIPosition.FIT_SCREEN, offsetX:0, offsetY:0});\r\n\t\t\t}\r\n\t\t\tif (parent != null) parent.addChildAt(modalZone, parent.getChildIndex(this));\r\n\t\t} else {\t\r\n\t\t\tif (modalZone != null) {\r\n\t\t\t\tif (modalZone.parent != null) modalZone.parent.removeChild(modalZone);\r\n\t\t\t\tmodalZone.off(MouseEventType.CLICK, stopPropagation);\r\n\t\t\t\tmodalZone.off(TouchEventType.TAP, stopPropagation);\r\n\t\t\t\tmodalZone = null;\r\n\t\t\t\tif (positionables[0].item == modalZone) positionables.shift();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn _modal;\r\n\t}\r\n\t\r\n\tprivate function stopPropagation (pEvent:EventTarget): Void {}\r\n\t\r\n\tpublic function close ():Void {\r\n\t\tif (!isOpened) return;\r\n\t\tisOpened = false;\r\n\t\tmodal = false;\r\n\t\tdestroy();\r\n\t}\r\n\t\r\n\t/**\r\n\t * déclenche le positionnement des objets\r\n\t * @param pEvent\r\n\t */\r\n\tprivate function onResize (pEvent:EventTarget = null): Void {\r\n\t\tfor (lObj in positionables) {\r\n\t\t\tif (lObj.update) {\r\n\t\t\t\tif (lObj.align==UIPosition.TOP || lObj.align==UIPosition.TOP_LEFT || lObj.align==UIPosition.TOP_RIGHT) {\r\n\t\t\t\t\tlObj.offsetY = parent.y + lObj.item.y;\r\n\t\t\t\t} else if (lObj.align==UIPosition.BOTTOM || lObj.align==UIPosition.BOTTOM_LEFT || lObj.align==UIPosition.BOTTOM_RIGHT) {\t\r\n\t\t\t\t\tlObj.offsetY = GameStage.getInstance().safeZone.height - parent.y - lObj.item.y;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (lObj.align==UIPosition.LEFT || lObj.align==UIPosition.TOP_LEFT || lObj.align==UIPosition.BOTTOM_LEFT) {\r\n\t\t\t\t\tlObj.offsetX = parent.x + lObj.item.x;\r\n\t\t\t\t} else if (lObj.align==UIPosition.RIGHT || lObj.align==UIPosition.TOP_RIGHT || lObj.align==UIPosition.BOTTOM_RIGHT) {\t\r\n\t\t\t\t\tlObj.offsetX = GameStage.getInstance().safeZone.width - parent.x - lObj.item.x;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlObj.update = false;\r\n\t\t\t}\r\n\t\t\tUIPosition.setPosition(lObj.item, lObj.align, lObj.offsetX, lObj.offsetY);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * nettoie l'instance\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tclose();\r\n\t\tGameStage.getInstance().off(EventType.RESIZE, onResize);\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.ragestudio.utils.ui;\r\n\r\n\r\n/**\r\n * Classe de base des Ecrans\r\n * Tous les écrans d'interface héritent de cette classe\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Screen extends UIComponent \r\n{\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tmodalImage = \"assets/black_bg.png\";\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.ragestudio.ui.hud;\n\nimport com.ragestudio.utils.Config;\nimport com.ragestudio.utils.system.DeviceCapabilities;\nimport com.ragestudio.utils.ui.Screen;\nimport com.ragestudio.utils.ui.UIPosition;\nimport pixi.core.display.Container;\nimport pixi.core.sprites.Sprite;\nimport pixi.core.text.Text;\nimport pixi.core.textures.Texture;\nimport pixi.interaction.EventTarget;\n\n/**\n * Classe en charge de gérer les informations du Hud\n * @author Mathieu ANTHOINE\n */\nclass Hud extends Screen \n{\n\t\n\t/**\n\t * instance unique de la classe Hud\n\t */\n\tprivate static var instance: Hud;\n\t\n\tprivate var hudTopLeft:Container;\n\tprivate var hudBottomLeft:Container;\n\n\t/**\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\n\t * @return instance unique\n\t */\n\tpublic static function getInstance (): Hud {\n\t\tif (instance == null) instance = new Hud();\n\t\treturn instance;\n\t}\t\n\t\n\tpublic function new() \n\t{\n\t\tsuper();\n\t\t_modal = false;\n\t\thudTopLeft = new Container();\n\t\t\n\t\thudBottomLeft = new Container();\n\t\t\t\n\t\taddChild(hudTopLeft);\n\t\taddChild(hudBottomLeft);\n\t\t\n\t\tpositionables.push({ item:hudTopLeft, align:UIPosition.TOP_LEFT, offsetX:0, offsetY:0});\n\t\tpositionables.push({ item:hudBottomLeft, align:UIPosition.BOTTOM_LEFT, offsetX:0, offsetY:0});\n\n\t}\n\t\n\t/**\n\t * détruit l'instance unique et met sa référence interne à null\n\t */\n\toverride public function destroy (): Void {\n\t\tinstance = null;\n\t\tsuper.destroy();\n\t}\n\n}","package com.ragestudio.utils.ui;\r\n\r\n/**\r\n * Classe de base des PopIn\r\n * Toutes les popin d'interface héritent de cette classe\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Popin extends UIComponent\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n}","package com.ragestudio.ui.popin;\r\n\r\nimport com.ragestudio.game.GameManager;\r\nimport com.ragestudio.utils.Config;\r\nimport com.ragestudio.utils.events.MouseEventType;\r\nimport com.ragestudio.utils.events.TouchEventType;\r\nimport com.ragestudio.utils.sounds.SoundManager;\r\nimport com.ragestudio.utils.ui.Popin;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\n\r\n\t\r\n/**\r\n * Exemple de classe héritant de Popin\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Confirm extends Popin \r\n{\r\n\t\r\n\tprivate var background:Sprite;\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Confirm\r\n\t */\r\n\tprivate static var instance: Confirm;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Confirm {\r\n\t\tif (instance == null) instance = new Confirm();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbackground = new Sprite(Texture.fromImage(Config.url(Config.assetsPath+\"Confirm.png\")));\r\n\t\tbackground.anchor.set(0.5, 0.5);\r\n\t\taddChild(background);\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t\t\r\n\t\tonce(MouseEventType.CLICK,onClick);\r\n\t\tonce(TouchEventType.TAP,onClick);\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function test (pEvent:EventTarget):Void {\r\n\t\ttrace (pEvent);\r\n\t}\r\n\t\r\n\tprivate function onClick (pEvent:EventTarget): Void {\r\n\t\tSoundManager.getSound(\"click\").play();\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t\tGameManager.getInstance().start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n}","package com.ragestudio.ui.screens;\n\nimport com.ragestudio.utils.Config;\nimport com.ragestudio.utils.ui.Screen;\nimport pixi.core.sprites.Sprite;\nimport pixi.core.text.Text;\nimport pixi.core.textures.Texture;\n/**\n * Preloader Graphique principal\n * @author Mathieu ANTHOINE\n */\nclass GraphicLoader extends Screen \n{\n\t\n\t/**\n\t * instance unique de la classe GraphicLoader\n\t */\n\tprivate static var instance: GraphicLoader;\n\n\tprivate var loaderBar:SpriteAmplified;\n\tprivate var pourcentage:Text;\n\tprivate var title:Text;\n\tprivate static inline var MARGIN_TOP: Float = 500;\n\t\n\tpublic function new() \n\t{\n\t\tsuper();\n\t\tvar lBg:SpriteAmplified = new SpriteAmplified(\"preload_bg\");\n\t\tlBg.start();\n\t\taddChild(lBg);\n\t\t\n\t\ttitle = new Text(\"NEXT DAYS\", { font:'150px Arial black', fill : 0xFFFFFF, align : 'center' } );\n\t\ttitle.anchor.set(0.5, 0.5);\n\t\ttitle.y = -MARGIN_TOP/2;\n\t\taddChild(title);\n\t\t\n\t\tpourcentage  = new Text(\" \", { font : '50px Arial black', fill : 0xFFFFFF, align : 'center' } );\n\t\tpourcentage.anchor.set(0.5, 0.5);\n\t\tpourcentage.y = MARGIN_TOP/2;\n\t\taddChild(pourcentage);\n\t\t\n\t\tloaderBar = new SpriteAmplified (\"preload\");\n\t\tloaderBar.start();\n\t\tloaderBar.x = -loaderBar.width / 2;\n\t\taddChild(loaderBar);\n\t\tloaderBar.scale.x = 0;\n\t}\n\t\n\t/**\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\n\t * @return instance unique\n\t */\n\tpublic static function getInstance (): GraphicLoader {\n\t\tif (instance == null) instance = new GraphicLoader();\n\t\treturn instance;\n\t}\n\t\n\t/**\n\t * mise à jour de la barre de chargement\n\t * @param\tpProgress\n\t */\n\tpublic function update (pProgress:Float): Void {\n\t\tloaderBar.scale.x = pProgress;\n\t\tpourcentage.text = Math.floor(pProgress*100) + \"%\";\n\t}\n\t\n\t/**\n\t * détruit l'instance unique et met sa référence interne à null\n\t */\n\toverride public function destroy (): Void {\n\t\tinstance = null;\n\t\tsuper.destroy();\n\t}\n\n}","package com.ragestudio.ui.screens;\r\nimport com.ragestudio.utils.game.StateGraphic;\r\n\r\n/**\r\n * ...\r\n * @author Nicolas Vernou\r\n */\r\nclass SpriteAmplified extends StateGraphic\r\n{\r\n\r\n\tpublic function new(pAssetName) \r\n\t{\r\n\t\tassetName = pAssetName;\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\toverride public function start():Void \r\n\t{\r\n\t\tsuper.start();\r\n\t\tsetState(DEFAULT_STATE);\r\n\t}\r\n}","package com.ragestudio.ui.screens;\r\n\r\nimport com.ragestudio.ui.popin.Confirm;\r\nimport com.ragestudio.utils.Config;\r\nimport com.ragestudio.utils.events.MouseEventType;\r\nimport com.ragestudio.utils.events.TouchEventType;\r\nimport com.ragestudio.utils.sounds.SoundManager;\r\nimport com.ragestudio.utils.ui.Screen;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\n\r\n\t\r\n/**\r\n * Exemple de classe héritant de Screen\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass TitleCard extends Screen \r\n{\r\n\tprivate var background:Sprite;\r\n\t\r\n\t/**\r\n\t * instance unique de la classe TitleCard\r\n\t */\r\n\tprivate static var instance: TitleCard;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): TitleCard {\r\n\t\tif (instance == null) instance = new TitleCard();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbackground = new Sprite(Texture.fromImage(Config.url(Config.assetsPath+\"TitleCard_bg.png\")));\r\n\t\tbackground.anchor.set(0.5, 0.5);\r\n\t\taddChild(background);\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t\t\r\n\t\tonce(MouseEventType.CLICK,onClick);\r\n\t\tonce(TouchEventType.TAP,onClick);\r\n\t}\r\n\t\r\n\tprivate function onClick (pEvent:EventTarget): Void {\r\n\t\tSoundManager.getSound(\"click\").play();\r\n\t\tUIManager.getInstance().openPopin(Confirm.getInstance());\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n}","package com.ragestudio.utils ;\r\nimport haxe.Json;\r\nimport js.Browser;\r\n\r\n\t\r\n/**\r\n * Classe utilitaire contenant les données de configuration du jeu\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Config \r\n{\r\n\t\r\n\t/**\r\n\t * version de l'application\r\n\t */\r\n\tpublic static var version (get,never):String;\r\n\t\r\n\t/**\r\n\t * langue courante\r\n\t */\r\n\tpublic static var language (get,never): String;\r\n\t\r\n\t/**\r\n\t * langues disponibles\r\n\t */\r\n\tpublic static var languages (get,never): Array<String>;\r\n\t\r\n\t/**\r\n\t * défini si le jeu est en mode \"debug\" ou pas (si prévu dans le code du jeu)\r\n\t */\r\n\tpublic static var debug (get, never): Bool;\r\n\t\r\n\t/**\r\n\t * défini si il faut afficher les fps ou non\r\n\t */\r\n\tpublic static var fps (get,never): Bool;\r\n\r\n\t/**\r\n\t * défini si il faut afficher le qrcode ou non\r\n\t */\r\n\tpublic static var qrcode (get, never): Bool;\r\n\t\r\n\t/** \r\n\t * chemin du dossier de langues\r\n\t */\r\n\tpublic static var langPath (get, never): String;\r\n\t\r\n\t/** \r\n\t * chemin du dossier des fichiers textes\r\n\t */\r\n\tpublic static var txtsPath (get, never): String;\r\n\t\r\n\t/** \r\n\t * chemin du dossier d'assets graphiques\r\n\t */\r\n\tpublic static var assetsPath (get, never): String;\r\n\t\r\n\t\r\n\t/** \r\n\t * chemin du dossier de sons\r\n\t */\r\n\tpublic static var soundsPath (get, never): String;\r\n\r\n\t/** \r\n\t * chemin du dossier des polices de caractères\r\n\t */\r\n\tpublic static var fontsPath (get, never): String;\t\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * ############# LOADER RELATED ###############\r\n\t */\r\n\t\r\n\t/** \r\n\t * contient le nom des fichiers de tous les assets à charger lors du preload\r\n\t */\r\n\tpublic static var preload_Assets:Array<String>;\r\n\tpublic static var preload_Fonts:Array<String>;\r\n\tpublic static var preload_stateGraphic_Textures:Array<String>;\r\n\t\r\n\t/** \r\n\t * contienent le nom des fichiers de tous les assets, sons, textes et polices à charger lors du load général\r\n\t */\r\n\tpublic static var general_Assets:Array<String>;\r\n\tpublic static var general_Sounds:Array<String>;\r\n\tpublic static var general_Texts:Array<String>;\r\n\tpublic static var general_Fonts:Array<String>;\r\n\t/** \r\n\t * contient le nom des fichiers de tous les éléments à ajouter aux stateGraphic\r\n\t */\r\n\tpublic static var general_stateGraphic_Textures:Array<String>;\r\n\tpublic static var general_stateGraphic_Boxes:Array<String>;\r\n\t\r\n\t\r\n\t/** \r\n\t * contient le nom des fichiers de tous les assets à charger lors de l'ouverture d'un monde\r\n\t */\r\n\tpublic static var world1_Assets:Array<String>;\r\n\tpublic static var world1_stateGraphic_Textures:Array<String>;\r\n\tpublic static var world2_Assets:Array<String>;\r\n\tpublic static var world2_stateGraphic_Textures:Array<String>;\r\n\tpublic static var world3_Assets:Array<String>;\r\n\tpublic static var world3_stateGraphic_Textures:Array<String>;\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * conteneur des données de configuration\r\n\t */\r\n\tpublic static var data (get, never):Dynamic;\r\n\tprivate static var _data:Dynamic={};\r\n\t\r\n\tpublic static function init(pConfig:Json): Void {\r\n\t\tfor (i in Reflect.fields(pConfig)) Reflect.setField(_data, i, Reflect.field(pConfig, i));\r\n\t\t\r\n\t\tif (_data.version == null || _data.version==\"\") _data.version = \"0.0.0\";\r\n\t\tif (_data.language == null || _data.language==\"\") _data.language = Browser.window.navigator.language.substr(0, 2);\r\n\t\tif (_data.languages==\"\" || _data.languages == []) _data.languages.push(_data.language);\r\n\t\tif (_data.debug == null || _data.debug==\"\") _data.debug = false;\r\n\t\tif (_data.fps == null || _data.fps==\"\") _data.fps = false;\r\n\t\tif (_data.qrcode == null || _data.qrcode==\"\") _data.qrcode = false;\r\n\t\t\r\n\t\tif (_data.langPath == null) _data.langPath = \"\";\r\n\t\tif (_data.txtsPath == null) _data.txtsPath = \"\";\r\n\t\tif (_data.assetsPath == null) _data.assetsPath = \"\";\r\n\t\tif (_data.fontsPath == null) _data.fontsPath = \"\";\r\n\t\tif (_data.soundsPath == null) _data.soundsPath = \"\";\r\n\t\t\r\n\t\t\r\n\t\tif (_data.preload_Assets == null) _data.preload_Assets = [];\r\n\t\tif (_data.preload_Fonts == null) _data.preload_Fonts = [];\r\n\t\tif (_data.preload_stateGraphic_Textures == null) _data.preload_stateGraphic_Textures = [];\r\n\t\t\r\n\t\tif (_data.general_Assets == null) _data.general_Assets = [];\r\n\t\tif (_data.general_Sounds == null) _data.general_Sounds = [];\r\n\t\tif (_data.general_Texts == null) _data.general_Texts = [];\r\n\t\tif (_data.general_Fonts == null) _data.general_Fonts = [];\r\n\t\tif (_data.general_stateGraphic_Textures == null) _data.general_stateGraphic_Textures = [];\r\n\t\tif (_data.general_stateGraphic_Boxes == null) _data.general_stateGraphic_Boxes = [];\r\n\t\t\r\n\t\tif (_data.world1_Assets == null) _data.world_Assets = [];\r\n\t\tif (_data.world1_stateGraphic_Textures == null) _data.world_stateGraphic_Textures = [];\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Retourne l'url complète (chemin+version)\r\n\t * @return url complète\r\n\t */\r\n\tpublic static function url (pPath:String):String {\r\n\t\treturn pPath + \"?\" + version;\r\n\t}\t\r\n\t\r\n\tprivate static function get_data ():Dynamic {\r\n\t\treturn _data;\r\n\t}\r\n\t\r\n\tprivate static function get_version ():String {\r\n\t\treturn _data.version;\r\n\t}\r\n\t\r\n\tprivate static function get_language ():String {\r\n\t\treturn data.language;\r\n\t}\r\n\t\r\n\tprivate static function get_languages ():Array<String> {\r\n\t\treturn data.languages;\r\n\t}\r\n\t\r\n\tprivate static function get_debug ():Bool {\r\n\t\treturn data.debug;\r\n\t}\r\n\t\r\n\tprivate static function get_fps ():Bool {\r\n\t\treturn data.fps;\r\n\t}\r\n\t\r\n\tprivate static function get_qrcode ():Bool {\r\n\t\treturn data.qrcode;\r\n\t}\r\n\t\r\n\tprivate static function get_langPath ():String {\r\n\t\treturn _data.langPath;\r\n\t}\r\n\r\n\tprivate static function get_txtsPath ():String {\r\n\t\treturn _data.txtsPath;\r\n\t}\t\r\n\t\r\n\tprivate static function get_assetsPath ():String {\r\n\t\treturn _data.assetsPath;\r\n\t}\r\n\t\r\n\tprivate static function get_fontsPath ():String {\r\n\t\treturn _data.fontsPath;\r\n\t}\r\n\t\r\n\tprivate static function get_soundsPath ():String {\r\n\t\treturn _data.soundsPath;\r\n\t}\r\n\r\n}","package com.ragestudio.utils;\r\n\r\nimport com.ragestudio.utils.system.DeviceCapabilities;\r\nimport js.Browser;\r\nimport js.html.Image;\r\n\r\n\r\n/**\r\n * Classe de Debug\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Debug\r\n{\r\n\r\n\t/**\r\n\t * instance unique de la classe Main\r\n\t */\r\n\tprivate static var instance: Debug;\t\r\n\t\r\n\tpublic var fps:Perf;\r\n\tprivate static inline var QR_SIZE:Float = 0.35;\r\n\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Debug {\r\n\t\tif (instance == null) instance = new Debug();\r\n\t\treturn instance;\r\n\t}\t\r\n\t\r\n\tprivate function new() {}\r\n\t\r\n\t/**\r\n\t * initialisation du débogueur\r\n\t * @param\tpGameDispatcher\r\n\t */\r\n\tpublic function init():Void \r\n\t{\r\n\t\tif (Config.fps) fps = new Perf(\"TL\");\r\n\t\t\r\n\t\tif (Config.qrcode) \r\n\t\t{\r\n\t\t\tvar lQr:Image = new Image();\r\n\t\t\tlQr.style.position = 'absolute';\r\n\t\t\tlQr.style.right = '0px';\r\n\t\t\tlQr.style.bottom = '0px';\r\n\t\t\tvar lSize:Int = Std.int(QR_SIZE * DeviceCapabilities.getSizeFactor());\r\n\t\t\tlQr.src = 'https://chart.googleapis.com/chart?chs='+lSize+'x'+lSize+'&cht=qr&chl=' + Browser.location.href + '&choe=UTF-8';\r\n\t\t\tBrowser.document.body.appendChild(lQr);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function error (pArg:Dynamic): Void {\r\n\t\tBrowser.console.error(pArg);\r\n\t}\r\n\t\r\n\tpublic static function warn (pArg:Dynamic): Void {\r\n\t\tBrowser.console.warn (pArg);\r\n\t}\r\n\r\n\tpublic static function table (pArg:Dynamic): Void {\r\n\t\tBrowser.console.table (pArg);\r\n\t}\r\n\r\n\tpublic static function info (pArg:Dynamic): Void {\r\n\t\tBrowser.console.info (pArg);\r\n\t}\r\n\t\r\n\tpublic function destroy (): Void {}\r\n\r\n}","package com.ragestudio.utils.game;\r\n\r\nimport pixi.core.display.Container;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.core.graphics.GraphicsData;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.core.sprites.Sprite;\r\n\r\n/**\r\n * Classe utilitaire permettant de tester diverses collisions entre boites, formes et points\r\n * @author Mathieu ANTHOINE\r\n * @version 0.9.0\r\n */\r\nclass CollisionManager \r\n{\r\n\r\n\tprivate function new() {}\r\n\t\t\r\n\t/**\r\n\t * test la collision entre les boites englobantes de deux DisplayObject\r\n\t * @param\tpObjectA objet à tester\r\n\t * @param\tpObjectB objet à tester\r\n\t * @return résultat du test de collision\r\n\t */\r\n\tpublic static function hitTestObject(pObjectA:DisplayObject, pObjectB:DisplayObject):Bool {\r\n\t\t\r\n\t\treturn getIntersection(pObjectA.getBounds(), pObjectB.getBounds());\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * test la collision entre l'objet et un point (prend en compte la hitArea si elle est définie). Légère adaptation de la méthode hitTest de la classe InteractionManager\r\n\t * @param\tpObject objet à tester\r\n\t * @param\tpPoint point exprimé en coordonnées globales\r\n\t * @return\trésultat du test de collision\r\n\t */\r\n\tpublic static function hitTestPoint (pItem:DisplayObject, pGlobalPoint:Point):Bool {\r\n\r\n\t\tvar lPoint:Point=pItem.toLocal(pGlobalPoint);\r\n\t\tvar x:Float = lPoint.x;\r\n\t\tvar y:Float = lPoint.y;\r\n\t\t\r\n\t\tif (pItem.hitArea != null && pItem.hitArea.contains != null) {\r\n\t\t\treturn pItem.hitArea.contains(x, y);\t\t\r\n\t\t}\r\n\t\telse if (Std.is(pItem, Sprite)) {\t\r\n\t\t\t\r\n\t\t\tvar lSprite:Sprite = cast(pItem, Sprite);\r\n\t\t\t\r\n\t\t\tvar lWidth:Float = lSprite.texture.frame.width;\r\n\t\t\tvar lHeight:Float = lSprite.texture.frame.height;\r\n\t\t\tvar lX1:Float = -lWidth * lSprite.anchor.x;\r\n\t\t\tvar lY1:Float;\r\n\t \r\n\t\t\tif (x > lX1 && x < lX1 + lWidth)\r\n\t\t\t{\r\n\t\t\t\tlY1 = -lHeight * lSprite.anchor.y;\r\n\t\t\t\tif (y > lY1 && y < lY1 + lHeight) return true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Std.is(pItem, Graphics)) {\r\n\t\t\tvar lGraphicsData:Array<GraphicsData> = untyped pItem.graphicsData;\t\t\r\n\t\t\tfor (i in 0...lGraphicsData.length) {\r\n\t\t\t\tvar lData = lGraphicsData[i];\r\n\t\t\t\t // only deal with fills..\r\n\t\t\t\tif (! untyped lData.fill) continue;\t\t\t\r\n\t\t\t\tif(lData.shape!=null && lData.shape.contains(x, y)) return true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Std.is (pItem, Container)) {\r\n\t\t\tvar lContainer:Container = cast(pItem, Container);\r\n\t\t\tvar lLength:Int = lContainer.children.length;\r\n\t\t\tfor (i in 0...lLength) {\r\n\t\t\t\tif (hitTestPoint(lContainer.children[i], pGlobalPoint)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param\tpHitBoxA boite englobante principale\r\n\t * @param\tpHitBoxB boite englobante principale\r\n\t * @param\tpPointsA liste de points de collision\r\n\t * @param\tpPointsB liste de points de collision\r\n\t * @return  résultat de la collision\r\n\t */\r\n\tpublic static function hasCollision (pHitBoxA:DisplayObject, pHitBoxB:DisplayObject, pPointsA:Array<Point> = null, pPointsB:Array<Point> = null): Bool {\r\n\t\tif (pHitBoxA == null || pHitBoxB == null) return false;\r\n\t\t\r\n\t\t// test des boites de collision principale\r\n\t\tif (!hitTestObject(pHitBoxA,pHitBoxB)) return false;\r\n\t\t\r\n\t\t// si il n'y a pas de boites de collision plus précises on valide\r\n\t\tif (pPointsA == null && pPointsB == null) return true;\t\t\t\r\n\t\t\r\n\t\t// test points vers la forme de la boite principale \r\n\t\tif (pPointsA!=null) return testPoints(pPointsA, pHitBoxB);\r\n\t\tif (pPointsB!=null) return testPoints(pPointsB, pHitBoxA);\r\n\t\t\r\n\t\treturn false;\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * teste l'intersection des boites englobantes\r\n\t * @param\tpRectA rectangle à tester\r\n\t * @param\tpRectB rectangle à tester\r\n\t * @return résultat de l'intersection\r\n\t */\r\n\tprivate static function getIntersection (pRectA:Rectangle, pRectB:Rectangle): Bool {\r\n\t\treturn !(pRectB.x > (pRectA.x + pRectA.width) || (pRectB.x + pRectB.width) < pRectA.x || pRectB.y > (pRectA.y + pRectA.height) || (pRectB.y + pRectB.height) < pRectA.y);\r\n\t}\r\n\t\r\n\t/**\r\n\t * \r\n\t * @param\tpHitPoints liste de points de collision (dont le repère est déjà converti en global)\r\n\t * @param\tpHitBox boite englobante\r\n\t * @return  résultat de la collision\r\n\t */\r\n\tprivate static function testPoints (pHitPoints:Array<Point>, pHitBox:DisplayObject): Bool {\r\n\t\tvar lLength:Int = pHitPoints.length;\r\n\t\tfor (i in 0...lLength) {\r\n\t\t\tif (hitTestPoint(pHitBox,pHitPoints[i])) return true;\r\n\t\t}\r\n\t\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.ragestudio.utils.game;\r\n\r\nimport com.ragestudio.utils.events.EventType;\r\nimport com.ragestudio.utils.system.DeviceCapabilities;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.math.shapes.Rectangle;\r\n\r\n/**\r\n * Classe en charge de mettre en place la structure graphique du jeu (conteneurs divers)\r\n * et la gestion du redimensionnement de la zone de jeu en fonction du contexte\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass GameStage extends Container\r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe GameStage\r\n\t */\r\n\tprivate static var instance: GameStage;\r\n\r\n\tprivate var _alignMode: GameStageAlign = GameStageAlign.CENTER;\t\r\n\r\n\tprivate var _scaleMode: GameStageScale = GameStageScale.SHOW_ALL;\r\n\t\r\n\tprivate var _safeZone:Rectangle= new Rectangle(0,0,SAFE_ZONE_WIDTH,SAFE_ZONE_HEIGHT);\r\n\r\n\t/**\r\n\t * callback de render\r\n\t */\r\n\tprivate var _render:Void->Void;\t\r\n\t\r\n\t/**\r\n\t * largeur minimum pour le contenu visible par défaut\r\n\t */\r\n\tprivate static inline var SAFE_ZONE_WIDTH: Int = 2048;\r\n\r\n\t/**\r\n\t * hauteur minimum pour le contenu visible par défaut\r\n\t */\r\n\tprivate static inline var SAFE_ZONE_HEIGHT: Int = 1366;\r\n\t\t\r\n\t/**\r\n\t * conteneur des pop-in\r\n\t */\r\n\tprivate var popinsContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur du Hud\r\n\t */\r\n\tprivate var hudContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur des écrans d'interface\r\n\t */\r\n\tprivate var screensContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur du jeu\r\n\t */\r\n\tprivate var gameContainer:Container;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t\t\t\r\n\t\tgameContainer = new Container();\t\t\r\n\t\taddChild(gameContainer);\r\n\t\t\r\n\t\tscreensContainer = new Container();\r\n\t\taddChild(screensContainer);\r\n\t\t\r\n\t\thudContainer = new Container();\r\n\t\taddChild(hudContainer);\r\n\t\t\r\n\t\tpopinsContainer = new Container();\r\n\t\taddChild(popinsContainer);\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialisation de la zone de jeu\r\n\t * @param   pRender Callback qui fait le rendu pour mettre à jour le système de coordonnées avant de reconstruire d'éventuels éléments\r\n\t * @param\tpSafeZoneWidth largeur de la safeZone\r\n\t * @param\tpSafeZoneHeight hauteur de la safeZone\r\n\t * @param\tcenterGameContainer centrer ou pas le conteneur des élements InGame\r\n\t * @param\tcenterScreensContainer centrer ou pas le conteneur des Ecrans\r\n\t * @param\tcenterPopinContainer centrer ou pas le conteneur des Popins\r\n\t */\r\n\tpublic function init (pRender:Void->Void, ?pSafeZoneWidth:UInt = SAFE_ZONE_WIDTH, ?pSafeZoneHeight:UInt = SAFE_ZONE_WIDTH, ?pCenterGameContainer:Bool = false, ?pCenterScreensContainer:Bool = true, ?pCenterPopinContainer:Bool = true):Void {\r\n\t\t\r\n\t\t_safeZone = new Rectangle (0, 0, pSafeZoneWidth, pSafeZoneHeight);\r\n\t\t\r\n\t\tif (pCenterGameContainer) {\r\n\t\t\tgameContainer.x = safeZone.width / 2;\r\n\t\t\tgameContainer.y = safeZone.height / 2;\r\n\t\t}\r\n\t\t\r\n\t\tif (pCenterScreensContainer) {\r\n\t\t\tscreensContainer.x = safeZone.width / 2;\r\n\t\t\tscreensContainer.y = safeZone.height / 2;\r\n\t\t}\r\n\t\t\r\n\t\tif (pCenterPopinContainer) {\r\n\t\t\tpopinsContainer.x = safeZone.width / 2;\r\n\t\t\tpopinsContainer.y = safeZone.height / 2;\r\n\t\t}\r\n\t\t\r\n\t\t_render = pRender;\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): GameStage {\r\n\t\tif (instance == null) instance = new GameStage();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Redimensionne la scène du jeu en fonction de la taille disponible pour l'affichage\r\n\t */\r\n\tpublic function resize (): Void {\r\n\t\t\r\n\t\tvar lWidth:UInt = DeviceCapabilities.width;\r\n\t\tvar lHeight:UInt = DeviceCapabilities.height;\r\n\t\t\t\t\r\n\t\tvar lRatio:Float = Math.round(10000 * Math.min( lWidth / safeZone.width, lHeight / safeZone.height)) / 10000;\r\n\t\t\r\n\t\tif (scaleMode == GameStageScale.SHOW_ALL) scale.set(lRatio, lRatio);\r\n\t\telse scale.set (DeviceCapabilities.textureRatio, DeviceCapabilities.textureRatio);\r\n\t\t\r\n\t\tif (alignMode == GameStageAlign.LEFT || alignMode == GameStageAlign.TOP_LEFT || alignMode == GameStageAlign.BOTTOM_LEFT) x = 0;\r\n\t\telse if (alignMode == GameStageAlign.RIGHT || alignMode == GameStageAlign.TOP_RIGHT || alignMode == GameStageAlign.BOTTOM_RIGHT) x = lWidth - safeZone.width * scale.x;\r\n\t\telse x = (lWidth - safeZone.width * scale.x) / 2;\r\n\t\t\r\n\t\tif (alignMode == GameStageAlign.TOP || alignMode == GameStageAlign.TOP_LEFT || alignMode == GameStageAlign.TOP_RIGHT) y = 0;\r\n\t\telse if (alignMode == GameStageAlign.BOTTOM || alignMode == GameStageAlign.BOTTOM_LEFT || alignMode == GameStageAlign.BOTTOM_RIGHT) y = lHeight - safeZone.height * scale.y;\r\n\t\telse y = (lHeight - safeZone.height * scale.y) / 2;\r\n\t\t\r\n\t\t\r\n\t\trender();\r\n\t\t\r\n\t\temit (EventType.RESIZE, { width:lWidth, height:lHeight } );\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * fait le rendu de l'écran\r\n\t */\r\n\tpublic function render (): Void {\r\n\t\tif (_render!=null) _render();\r\n\t}\t\r\n\t\r\n\t/*\r\n\t * style d'alignement au sein de l'écran\r\n\t */\r\n\tpublic var alignMode (get, set) : GameStageAlign;\r\n\t\r\n\tprivate function get_alignMode( ) { \r\n\t\treturn _alignMode;\r\n\t}\r\n\t\r\n\tprivate function set_alignMode(pAlign:GameStageAlign) {\r\n\t\t_alignMode = pAlign;\r\n\t\tresize();\r\n\t\treturn _alignMode;\r\n\t}\r\n\r\n\t/*\r\n\t * style de redimensionnement au sein de l'écran\r\n\t */\r\n\tpublic var scaleMode (get, set) : GameStageScale;\r\n\t\r\n\tprivate function get_scaleMode( ) { \r\n\t\treturn _scaleMode;\r\n\t}\r\n\t\r\n\tprivate function set_scaleMode(pScale:GameStageScale) {\r\n\t\t_scaleMode = pScale;\r\n\t\tresize();\r\n\t\treturn _scaleMode;\r\n\t}\t\r\n\t\r\n\t/**\r\n\t * Rectangle délimitant le contenu minimum visible\r\n\t */\r\n\tpublic var safeZone (get, never):Rectangle;\r\n\t\r\n\tprivate function get_safeZone () {\r\n\t\treturn _safeZone;\r\n\t}\r\n\r\n\t/**\r\n\t * accès en lecture au conteneur de jeu\r\n\t * @return gameContainer\r\n\t */\r\n\tpublic function getGameContainer (): Container {\r\n\t\treturn gameContainer;\r\n\t}\r\n\t\r\n\t/**\r\n\t * accès en lecture au conteneur d'écrans\r\n\t * @return screensContainer\r\n\t */\r\n\tpublic function getScreensContainer (): Container {\r\n\t\treturn screensContainer;\r\n\t}\r\n\t\r\n\t/**\r\n\t * accès en lecture au conteneur de hud\r\n\t * @return hudContainer\r\n\t */\r\n\tpublic function getHudContainer (): Container {\r\n\t\treturn hudContainer;\r\n\t}\r\n\t\r\n\t/**\r\n\t * accès en lecture au conteneur de PopIn\r\n\t * @return popinContainer\r\n\t */\r\n\tpublic function getPopinsContainer (): Container {\r\n\t\treturn popinsContainer;\r\n\t}\r\n\t\t\t\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy(true);\r\n\t}\r\n\r\n}","package com.ragestudio.utils.sounds;\r\n\r\nimport howler.Howl;\r\n\r\n\t\r\n/**\r\n * Manager centralisé de Sons Howler\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass SoundManager\r\n{\r\n\t/**\r\n\t * liste de tous les sons du jeu\r\n\t */\r\n\tprivate static var list (default,null):Map<String,Howl>;\r\n\t\r\n\tprivate function new() {\r\n\t}\r\n\t\r\n\t/**\r\n\t * ajoute un son à la liste\r\n\t * @param\tpName identifiant du son\r\n\t * @param\tpSound son\r\n\t */\r\n\tpublic static function addSound (pName:String,pSound:Howl):Void {\r\n\t\tif (list == null) list = new Map<String,Howl>();\r\n\t\tlist[pName] = pSound;\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne une référence vers le son par l'intermédiaire de son identifiant\r\n\t * @param\tpName identifiant du son\r\n\t * @return le son\r\n\t */\r\n\tpublic static function getSound(pName:String): Howl {\r\n\t\treturn list[pName];\r\n\t}\r\n\r\n}","package com.ragestudio.utils.system;\r\n\r\nimport com.ragestudio.utils.game.GameStage;\r\nimport com.ragestudio.utils.Config;\r\nimport js.Browser;\r\nimport js.html.Element;\r\nimport js.html.Event;\r\nimport js.html.Image;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\n\t\r\n/**\r\n * Classe Utilitaire donnant accès à des propriétés du périphérique cible\r\n * Tous les périphériques ne se comportant pas comme on l'attend, DeviceCapabilities permet de\r\n * masquer les comportement différents et présenter une facade unique au reste du code\r\n * @version 0.4.0\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass DeviceCapabilities \r\n{\t\t\r\n\r\n\tpublic static inline var SYSTEM_ANDROID: String = \"Android\";\r\n\tpublic static inline var SYSTEM_IOS: String = \"iOS\";\r\n\tpublic static inline var SYSTEM_BLACKBERRY: String = \"BlackBerry\";\r\n\tpublic static inline var SYSTEM_BB_PLAYBOOK: String = \"BlackBerry PlayBook\";\r\n\tpublic static inline var SYSTEM_WINDOWS_MOBILE: String = \"IEMobile\";\r\n\tpublic static inline var SYSTEM_DESKTOP: String = \"Desktop\";\t\r\n\t\r\n\tprivate static var fullScreenButton:Image;\r\n\tprivate static inline var ICON_SIZE:Float = 0.075;\r\n\r\n\tpublic static inline var TEXTURE_NO_SCALE: String = \"\";\r\n\tpublic static inline var TEXTURE_HD: String = \"hd\";\r\n\tpublic static inline var TEXTURE_MD: String = \"md\";\r\n\tpublic static inline var TEXTURE_LD: String = \"ld\";\t\r\n\t\r\n\tprivate static var texturesRatios: Map<String,Float> = [\"hd\"=>1,\"md\"=>0.5,\"ld\"=>0.25];\r\n\t\r\n\tpublic static var textureRatio (default,null):Float = 1;\r\n\tpublic static var textureType (default,null):String = TEXTURE_NO_SCALE;\t\r\n\t\r\n\tprivate static var screenRatio:Float = 1;\r\n\t\r\n\t/**\r\n\t  * hauteur du Canvas (change avec l'orientation)\r\n\t  */\r\n\tpublic static var height (get, never) : UInt;\r\n\t\r\n\tprivate static function get_height () {\r\n\t\treturn Browser.window.innerHeight;\r\n\t}\r\n\t\r\n\t/**\r\n\t  * largeur du Canvas (change avec l'orientation)\r\n\t  */\r\n\tpublic static var width (get, never) : UInt;\r\n\t\r\n\tprivate static function get_width () {\r\n\t\treturn Browser.window.innerWidth;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Système d'exploitation du Device\r\n\t */\r\n\tpublic static var system (get, never) : String;\r\n\t\r\n\tprivate static function get_system( ) {\r\n\t\tif ( ~/IEMobile/i.match(Browser.navigator.userAgent)) return SYSTEM_WINDOWS_MOBILE;\t\r\n\t\telse if ( ~/iPhone|iPad|iPod/i.match(Browser.navigator.userAgent)) return SYSTEM_IOS;\r\n\t\telse if ( ~/BlackBerry/i.match(Browser.navigator.userAgent)) return SYSTEM_BLACKBERRY;\r\n\t\telse if ( ~/PlayBook/i.match(Browser.navigator.userAgent)) return SYSTEM_BB_PLAYBOOK;\r\n\t\telse if ( ~/Android/i.match(Browser.navigator.userAgent)) return SYSTEM_ANDROID;\r\n\t\telse return SYSTEM_DESKTOP;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Est-ce que le jeu est encapsulé dans CocoonJs\r\n\t */\r\n\tpublic static var isCocoonJS (get, never) : Bool;\r\n\t\r\n\tprivate static function get_isCocoonJS () {\r\n\t\treturn untyped Browser.navigator.isCocoonJS;\r\n\t}\r\n\t\r\n\t/**\r\n\t * affiche le bouton de fullscreen\r\n\t */\r\n\tpublic static function displayFullScreenButton ():Void {\r\n\t\tif (isCocoonJS) return;\r\n\t\t\r\n\t\tif (!~/(iPad|iPhone|iPod)/g.match(Browser.navigator.userAgent) && !~/MSIE/i.match(Browser.navigator.userAgent) /*&& !(Browser.window.location.hash = !!Browser.window.MSInputMethodContext)*/) {\r\n\r\n\t\t\tBrowser.document.onfullscreenchange = onChangeFullScreen;\r\n\t\t\tuntyped Browser.document.onwebkitfullscreenchange = onChangeFullScreen;\r\n\t\t\tuntyped Browser.document.onmozfullscreenchange = onChangeFullScreen;\r\n\t\t\tuntyped Browser.document.onmsfullscreenchange = onChangeFullScreen;\r\n\t\t\t//Browser.document.addEventListener(\"MSFullscreenChange\", onChangeFullScreen );\r\n\t\t\t\r\n\t\t\tfullScreenButton = new Image();\r\n\t\t\tfullScreenButton.style.position = 'absolute';\r\n\t\t\tfullScreenButton.style.right = '0px';\r\n\t\t\tfullScreenButton.style.top = '0px';\r\n\t\t\tfullScreenButton.style.cursor = \"pointer\";\r\n\t\t\tfullScreenButton.width = Std.int(getSizeFactor()*ICON_SIZE);\r\n\t\t\tfullScreenButton.height = Std.int(getSizeFactor()*ICON_SIZE);\r\n\t\t\tfullScreenButton.onclick = enterFullscreen;\r\n\t\t\tfullScreenButton.src = Config.assetsPath+\"fullscreen.png\";\r\n\t\t\t\r\n\t\t\tBrowser.document.body.appendChild(fullScreenButton);\r\n\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * entre dans le mode fullscreen\r\n\t * @param\tpEvent\r\n\t */\r\n\tprivate static function enterFullscreen(pEvent:Event):Void {\r\n\t\tvar lDocElm:Element = Browser.document.documentElement;\r\n\t\tif (lDocElm.requestFullscreen!=null) lDocElm.requestFullscreen();\r\n\t\telse if (untyped lDocElm.mozRequestFullScreen!=null) untyped lDocElm.mozRequestFullScreen();\r\n\t\telse if (untyped lDocElm.webkitRequestFullScreen!=null) untyped lDocElm.webkitRequestFullScreen();\r\n\t\telse if (untyped lDocElm.msRequestFullscreen!=null) untyped lDocElm.msRequestFullscreen();\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * sort du mode fullscreen\r\n\t */\r\n\tprivate static function exitFullscreen():Void {\r\n\t\tif (Browser.document.exitFullscreen!=null) Browser.document.exitFullscreen();\r\n\t\telse if (untyped Browser.document.mozCancelFullScreen!=null) untyped Browser.document.mozCancelFullScreen();\r\n\t\telse if (untyped Browser.document.webkitCancelFullScreen!=null) untyped Browser.document.webkitCancelFullScreen();\r\n\t\telse if (untyped Browser.document.msExitFullscreen) untyped Browser.document.msExitFullscreen();\r\n\t}\r\n\r\n\t/**\r\n\t * callback appelée sur changement d'état fullscreen\r\n\t * @param\tpEvent\r\n\t */\r\n\tprivate static function onChangeFullScreen (pEvent:Event):Void {\r\n\t\tif (untyped Browser.document.fullScreen || untyped Browser.document.mozFullScreen || untyped Browser.document.webkitIsFullScreen || untyped Browser.document.msFullscreenElement) {\r\n\t\t\tfullScreenButton.style.display = 'none';\r\n\t\t} else {\r\n\t\t\tfullScreenButton.style.display = 'block';\r\n\t\t}\r\n\t\tpEvent.preventDefault();\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Calcul la dimension idéale du bouton en fonction du device\r\n\t * @return fullscreen ideal size\r\n\t */\r\n\tpublic static function getSizeFactor ():Float {\r\n\t\tvar lSize:Float=Math.floor(Math.min(Browser.window.screen.width,Browser.window.screen.height));\r\n\t\tif (system==SYSTEM_DESKTOP) lSize/=3;\r\n\r\n\t\treturn lSize;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * retourne un objet Rectangle correspondant aux dimensions de l'écran dans le repère du DisplayObject passé en paramètre\r\n\t * @param pTarget repère cible\r\n\t * @return objet Rectangle\r\n\t */\r\n\tpublic static function getScreenRect(pTarget:DisplayObject):Rectangle {\r\n\r\n\t\tvar lTopLeft:Point = new Point (0, 0);\r\n\t\tvar lBottomRight:Point = new Point (width, height);\r\n\t\t\r\n\t\tlTopLeft = pTarget.toLocal(lTopLeft);\r\n\t\tlBottomRight = pTarget.toLocal(lBottomRight);\r\n\t\t\r\n\t\treturn new Rectangle(lTopLeft.x, lTopLeft.y, lBottomRight.x - lTopLeft.x, lBottomRight.y - lTopLeft.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Calibre le viewport pour que le Browser affiche la résolution réeelle du Device\r\n\t */\r\n\tpublic static function scaleViewport (): Void {\r\n\t\t\r\n\t\t//TODO: COCOONJS\r\n\t\tif (system == SYSTEM_WINDOWS_MOBILE) return;\r\n\t\t\r\n\t\tscreenRatio = Browser.window.devicePixelRatio;\r\n\t\tif (!isCocoonJS) Browser.document.write('<meta name=\"viewport\" content=\"initial-scale=' + Math.round(100 / screenRatio) / 100 + ', user-scalable=no, minimal-ui\">');\t\t\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Défini les ratios de texture\r\n\t * @param\tpHd ratio texture pour HD\r\n\t * @param\tpMd ratio texture pour MD\r\n\t * @param\tpLd ratio texture pour LD\r\n\t */\r\n\tpublic static function init(?pHd:Float = 1, ?pMd:Float = 0.5, ?pLd:Float = 0.25):Void {\r\n\r\n\t\ttexturesRatios[TEXTURE_HD]=pHd;\r\n\t\ttexturesRatios[TEXTURE_MD]=pMd;\r\n\t\ttexturesRatios[TEXTURE_LD]=pLd;\r\n\t\t\r\n\t\tif (Config.data.texture != null && Config.data.texture!=\"\") textureType = Config.data.texture;\r\n\t\telse {\r\n\t\t\tvar lRatio:Float = Math.min(Browser.window.screen.width * screenRatio / GameStage.getInstance().safeZone.width, Browser.window.screen.height * screenRatio / GameStage.getInstance().safeZone.height);\r\n\t\t\tif (lRatio <= 0.25) textureType = TEXTURE_LD;\r\n\t\t\telse if (lRatio <= 0.5) textureType = TEXTURE_MD;\r\n\t\t\telse textureType = TEXTURE_HD;\r\n\t\t}\r\n\t\ttextureRatio = texturesRatios[textureType];\r\n\t\t\r\n\t}\r\n\r\n}","package com.ragestudio.utils.ui;\r\nimport com.ragestudio.utils.system.DeviceCapabilities;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\n\r\n/**\r\n * Classe utilitaire permettant de gérer le repositionnement des élements d'interface dans l'écran\r\n * @author Mathieu ANTHOINE\r\n */\r\n\r\nclass UIPosition \r\n{\r\n\tpublic static inline var LEFT:String=\"left\";\r\n\tpublic static inline var RIGHT:String=\"right\";\r\n\tpublic static inline var TOP:String=\"top\";\r\n\tpublic static inline var BOTTOM:String=\"bottom\";\r\n\tpublic static inline var TOP_LEFT:String=\"topLeft\";\r\n\tpublic static inline var TOP_RIGHT:String=\"topRight\";\r\n\tpublic static inline var BOTTOM_LEFT:String=\"bottomLeft\";\r\n\tpublic static inline var BOTTOM_RIGHT:String=\"bottomRight\";\r\n\t\r\n\tpublic static inline var FIT_WIDTH:String=\"fitWidth\";\r\n\tpublic static inline var FIT_HEIGHT:String=\"fitHeight\";\r\n\tpublic static inline var FIT_SCREEN:String = \"fitScreen\";\r\n\t\r\n\tprivate function new() {}\r\n\t\r\n\t/**\r\n\t* \r\n\t* @param\tpTarget DisplayObject à positionner\r\n\t* @param\tpPosition type de positionnement\r\n\t* @param\tpOffsetX décalage en X (positif si c'est vers l'interieur de la zone de jeu sinon en négatif)\r\n\t* @param\tpOffsetY décalage en Y (positif si c'est vers l'interieur de la zone de jeu sinon en négatif)\r\n\t*/\r\n\tstatic public function setPosition (pTarget:DisplayObject, pPosition:String, pOffsetX:Float = 0, pOffsetY:Float = 0): Void {\r\n\t\t\t\t\r\n\t\tvar lScreen:Rectangle = DeviceCapabilities.getScreenRect(pTarget.parent);\r\n\t\t\r\n\t\tvar lTopLeft:Point = new Point (lScreen.x, lScreen.y);\r\n\t\tvar lBottomRight:Point = new Point (lScreen.x+lScreen.width,lScreen.y+lScreen.height);\r\n\t\t\r\n\t\tif (pPosition == TOP || pPosition == TOP_LEFT || pPosition == TOP_RIGHT) pTarget.y = lTopLeft.y + pOffsetY;\r\n\t\tif (pPosition == BOTTOM || pPosition == BOTTOM_LEFT || pPosition == BOTTOM_RIGHT) pTarget.y = lBottomRight.y - pOffsetY;\r\n\t\tif (pPosition == LEFT || pPosition == TOP_LEFT || pPosition == BOTTOM_LEFT) pTarget.x = lTopLeft.x + pOffsetX;\r\n\t\tif (pPosition == RIGHT || pPosition == TOP_RIGHT || pPosition == BOTTOM_RIGHT) pTarget.x = lBottomRight.x - pOffsetX;\r\n\t\t\r\n\t\tif (pPosition == FIT_WIDTH || pPosition == FIT_SCREEN) {\r\n\t\t\tpTarget.x = lTopLeft.x;\r\n\t\t\tuntyped pTarget.width = lBottomRight.x - lTopLeft.x;\r\n\t\t}\r\n\t\tif (pPosition == FIT_HEIGHT || pPosition == FIT_SCREEN) {\r\n\t\t\tpTarget.y = lTopLeft.y;\r\n\t\t\tuntyped pTarget.height = lBottomRight.y - lTopLeft.y;\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n}\r\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java || python)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.xml;\n\nusing StringTools;\n\n/* poor'man enum : reduce code size + a bit faster since inlined */\nextern private class S {\n\tpublic static inline var IGNORE_SPACES \t= 0;\n\tpublic static inline var BEGIN\t\t\t= 1;\n\tpublic static inline var BEGIN_NODE\t\t= 2;\n\tpublic static inline var TAG_NAME\t\t= 3;\n\tpublic static inline var BODY\t\t\t= 4;\n\tpublic static inline var ATTRIB_NAME\t= 5;\n\tpublic static inline var EQUALS\t\t\t= 6;\n\tpublic static inline var ATTVAL_BEGIN\t= 7;\n\tpublic static inline var ATTRIB_VAL\t\t= 8;\n\tpublic static inline var CHILDS\t\t\t= 9;\n\tpublic static inline var CLOSE\t\t\t= 10;\n\tpublic static inline var WAIT_END\t\t= 11;\n\tpublic static inline var WAIT_END_RET\t= 12;\n\tpublic static inline var PCDATA\t\t\t= 13;\n\tpublic static inline var HEADER\t\t\t= 14;\n\tpublic static inline var COMMENT\t\t= 15;\n\tpublic static inline var DOCTYPE\t\t= 16;\n\tpublic static inline var CDATA\t\t\t= 17;\n\tpublic static inline var ESCAPE\t\t\t= 18;\n}\n\nclass Parser\n{\n\tstatic var escapes = {\n\t\tvar h = new haxe.ds.StringMap();\n\t\th.set(\"lt\", \"<\");\n\t\th.set(\"gt\", \">\");\n\t\th.set(\"amp\", \"&\");\n\t\th.set(\"quot\", '\"');\n\t\th.set(\"apos\", \"'\");\n\t\th;\n\t}\n\n\t/**\n\t\tParses the String into an XML Document. Set strict parsing to true in order to enable a strict check of XML attributes and entities.\n\t**/\n\tstatic public function parse(str:String, strict = false)\n\t{\n\t\tvar doc = Xml.createDocument();\n\t\tdoParse(str, strict, 0, doc);\n\t\treturn doc;\n\t}\n\n\tstatic function doParse(str:String, strict:Bool, p:Int = 0, ?parent:Xml):Int\n\t{\n\t\tvar xml:Xml = null;\n\t\tvar state = S.BEGIN;\n\t\tvar next = S.BEGIN;\n\t\tvar aname = null;\n\t\tvar start = 0;\n\t\tvar nsubs = 0;\n\t\tvar nbrackets = 0;\n\t\tvar c = str.fastCodeAt(p);\n\t\tvar buf = new StringBuf();\n\t\t// need extra state because next is in use\n\t\tvar escapeNext = S.BEGIN;\n\t\tvar attrValQuote = -1;\n\t\tinline function addChild(xml:Xml) {\n\t\t\tparent.addChild(xml);\n\t\t\tnsubs++;\n\t\t}\n\t\twhile (!StringTools.isEof(c))\n\t\t{\n\t\t\tswitch(state)\n\t\t\t{\n\t\t\t\tcase S.IGNORE_SPACES:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase\n\t\t\t\t\t\t\t'\\n'.code,\n\t\t\t\t\t\t\t'\\r'.code,\n\t\t\t\t\t\t\t'\\t'.code,\n\t\t\t\t\t\t\t' '.code:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = next;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '<'.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tstate = S.PCDATA;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.PCDATA:\n\t\t\t\t\tif (c == '<'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tvar child = Xml.createPCData(buf.toString());\n\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t} else if (c == '&'.code) {\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\tescapeNext = S.PCDATA;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t}\n\t\t\t\tcase S.CDATA:\n\t\t\t\t\tif (c == ']'.code && str.fastCodeAt(p + 1) == ']'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = Xml.createCData(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(child);\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN_NODE:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '!'.code:\n\t\t\t\t\t\t\tif (str.fastCodeAt(p + 1) == '['.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tif (str.substr(p, 6).toUpperCase() != \"CDATA[\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <![CDATA[\");\n\t\t\t\t\t\t\t\tp += 5;\n\t\t\t\t\t\t\t\tstate = S.CDATA;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (str.fastCodeAt(p + 1) == 'D'.code || str.fastCodeAt(p + 1) == 'd'.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str.substr(p + 2, 6).toUpperCase() != \"OCTYPE\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <!DOCTYPE\");\n\t\t\t\t\t\t\t\tp += 8;\n\t\t\t\t\t\t\t\tstate = S.DOCTYPE;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if( str.fastCodeAt(p + 1) != '-'.code || str.fastCodeAt(p + 2) != '-'.code )\n\t\t\t\t\t\t\t\tthrow(\"Expected <!--\");\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tstate = S.COMMENT;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '?'.code:\n\t\t\t\t\t\t\tstate = S.HEADER;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tif( parent == null )\n\t\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.CLOSE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.TAG_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.TAG_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( p == start )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\txml = Xml.createElement(str.substr(start, p - start));\n\t\t\t\t\t\taddChild(xml);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BODY:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tstate = S.WAIT_END;\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.CHILDS;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.ATTRIB_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp;\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected attribute name\");\n\t\t\t\t\t\ttmp = str.substr(start,p-start);\n\t\t\t\t\t\taname = tmp;\n\t\t\t\t\t\tif( xml.exists(aname) )\n\t\t\t\t\t\t\tthrow(\"Duplicate attribute\");\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.EQUALS;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.EQUALS:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '='.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.ATTVAL_BEGIN;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected =\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTVAL_BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '\"'.code | '\\''.code:\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\tstate = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tattrValQuote = c;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected \\\"\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_VAL:\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase '&'.code:\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\t\tescapeNext = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tcase '>'.code | '<'.code if( strict ):\n\t\t\t\t\t\t\t// HTML allows these in attributes values\n\t\t\t\t\t\t\tthrow \"Invalid unescaped \" + String.fromCharCode(c) + \" in attribute value\";\n\t\t\t\t\t\tcase _ if (c == attrValQuote):\n\t\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\t\tvar val = buf.toString();\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\txml.set(aname, val);\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t}\n\t\t\t\tcase S.CHILDS:\n\t\t\t\t\tp = doParse(str, strict, p, xml);\n\t\t\t\t\tstart = p;\n\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\tcase S.WAIT_END:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.WAIT_END_RET:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tif( nsubs == 0 )\n\t\t\t\t\t\t\t\tparent.addChild(Xml.createPCData(\"\"));\n\t\t\t\t\t\t\treturn p;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.CLOSE:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\n\t\t\t\t\t\tvar v = str.substr(start,p - start);\n\t\t\t\t\t\tif (v != parent.nodeName)\n\t\t\t\t\t\t\tthrow \"Expected </\" +parent.nodeName + \">\";\n\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.WAIT_END_RET;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.COMMENT:\n\t\t\t\t\tif (c == '-'.code && str.fastCodeAt(p +1) == '-'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\taddChild(Xml.createComment(str.substr(start, p - start)));\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.DOCTYPE:\n\t\t\t\t\tif(c == '['.code)\n\t\t\t\t\t\tnbrackets++;\n\t\t\t\t\telse if(c == ']'.code)\n\t\t\t\t\t\tnbrackets--;\n\t\t\t\t\telse if (c == '>'.code && nbrackets == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\taddChild(Xml.createDocType(str.substr(start, p - start)));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.HEADER:\n\t\t\t\t\tif (c == '?'.code && str.fastCodeAt(p + 1) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\tvar str = str.substr(start + 1, p - start - 2);\n\t\t\t\t\t\taddChild(Xml.createProcessingInstruction(str));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.ESCAPE:\n\t\t\t\t\tif (c == ';'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar s = str.substr(start, p - start);\n\t\t\t\t\t\tif (s.fastCodeAt(0) == '#'.code) {\n\t\t\t\t\t\t\tvar c = s.fastCodeAt(1) == 'x'.code\n\t\t\t\t\t\t\t\t? Std.parseInt(\"0\" +s.substr(1, s.length - 1))\n\t\t\t\t\t\t\t\t: Std.parseInt(s.substr(1, s.length - 1));\n\t\t\t\t\t\t\t#if (neko || cpp || php)\n\t\t\t\t\t\t\tif( c >= 128 ) {\n\t\t\t\t\t\t\t\t// UTF8-encode it\n\t\t\t\t\t\t\t\tif( c <= 0x7FF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xC0 | (c >> 6));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xE0 | (c >> 12));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else if( c <= 0x10FFFF ) {\n\t\t\t\t\t\t\t\t\tbuf.addChar(0xF0 | (c >> 18));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 12) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | ((c >> 6) & 63));\n\t\t\t\t\t\t\t\t\tbuf.addChar(0x80 | (c & 63));\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tthrow \"Cannot encode UTF8-char \" + c;\n\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\tbuf.addChar(c);\n\t\t\t\t\t\t} else if (!escapes.exists(s)) {\n\t\t\t\t\t\t\tif( strict )\n\t\t\t\t\t\t\t\tthrow 'Undefined entity: $s';\n\t\t\t\t\t\t\tbuf.add('&$s;');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuf.add(escapes.get(s));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t} else if (!isValidChar(c) && c != \"#\".code) {\n\t\t\t\t\t\tif( strict )\n\t\t\t\t\t\t\tthrow 'Invalid character in entity: ' + String.fromCharCode(c);\n\t\t\t\t\t\tbuf.addChar(\"&\".code);\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tp--;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = escapeNext;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tc = str.fastCodeAt(++p);\n\t\t}\n\n\t\tif (state == S.BEGIN)\n\t\t{\n\t\t\tstart = p;\n\t\t\tstate = S.PCDATA;\n\t\t}\n\n\t\tif (state == S.PCDATA)\n\t\t{\n\t\t\tif (p != start || nsubs == 0) {\n\t\t\t\tbuf.addSub(str, start, p-start);\n\t\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\t}\n\t\t\treturn p;\n\t\t}\n\n\t\tif( !strict && state == S.ESCAPE && escapeNext == S.PCDATA ) {\n\t\t\tbuf.addChar(\"&\".code);\n\t\t\tbuf.addSub(str, start, p - start);\n\t\t\taddChild(Xml.createPCData(buf.toString()));\n\t\t\treturn p;\n\t\t}\n\n\t\tthrow \"Unexpected end\";\n\t}\n\n\tstatic inline function isValidChar(c) {\n\t\treturn (c >= 'a'.code && c <= 'z'.code) || (c >= 'A'.code && c <= 'Z'.code) || (c >= '0'.code && c <= '9'.code) || c == ':'.code || c == '.'.code || c == '_'.code || c == '-'.code;\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package com.ragestudio.utils.events;\r\n\r\n/**\r\n * @author Mathieu ANTHOINE\r\n */\r\n\r\nclass EventType \r\n{\r\n\t\r\n\tpublic static inline var GAME_LOOP:String = \"gameLoop\";\r\n\tpublic static inline var RESIZE:String = \"resize\";\r\n\t\r\n\tpublic static inline var ADDED:String = \"added\";\r\n\tpublic static inline var REMOVED:String = \"removed\";\r\n\t\r\n}","package com.ragestudio.utils.events;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass LoadEventType extends EventType\r\n{\r\n\r\n\tpublic static inline var COMPLETE:String = \"complete\";\r\n\tpublic static inline var LOADED:String = \"load\";\r\n\tpublic static inline var PROGRESS:String = \"progress\";\r\n\tpublic static inline var ERROR:String = \"error\";\r\n\t\r\n}","package com.ragestudio.utils.events;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass MouseEventType extends EventType\r\n{\r\n\t\r\n\tpublic static inline var MOUSE_MOVE:String = \"mousemove\";\r\n\tpublic static inline var MOUSE_DOWN:String = \"mousedown\";\r\n\tpublic static inline var MOUSE_OUT:String = \"mouseout\";\r\n\tpublic static inline var MOUSE_OVER:String = \"mouseover\";\r\n\tpublic static inline var MOUSE_UP:String = \"mouseup\";\r\n\tpublic static inline var MOUSE_UP_OUTSIDE:String = \"mouseupoutside\";\r\n\tpublic static inline var CLICK:String = \"click\";\r\n\t\r\n\tpublic static inline var RIGHT_DOWN:String = \"rightdown\";\r\n\tpublic static inline var RIGHT_UP:String = \"rightup\";\r\n\tpublic static inline var RIGHT_UP_OUTSIDE:String = \"rightupoutside\";\r\n\tpublic static inline var RIGHT_CLICK:String = \"rightclick\";\r\n\t\r\n}","package com.ragestudio.utils.events;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass TouchEventType extends EventType\r\n{\r\n\r\n\tpublic static inline var TOUCH_START:String = \"touchstart\";\r\n\tpublic static inline var TOUCH_MOVE:String = \"touchmove\";\r\n\tpublic static inline var TOUCH_END:String = \"touchend\";\r\n\tpublic static inline var TOUCH_END_OUTSIDE:String = \"touchendoutside\";\r\n\tpublic static inline var TAP:String = \"tap\";\r\n\t\r\n}"],
"names":[],
"mappings":"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"
}